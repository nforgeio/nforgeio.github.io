<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>AspNetFixture.StartAsComposed(TStartup) Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="StartAsComposed%3CTStartup%3E method" /><meta name="System.Keywords" content="StartAsComposed(Of TStartup) method" /><meta name="System.Keywords" content="AspNetFixture.StartAsComposed%3CTStartup%3E method" /><meta name="System.Keywords" content="AspNetFixture.StartAsComposed(Of TStartup) method" /><meta name="Microsoft.Help.F1" content="Neon.Xunit.AspNetFixture.StartAsComposed``1" /><meta name="Microsoft.Help.Id" content="M:Neon.Xunit.AspNetFixture.StartAsComposed``1(System.Action{Microsoft.AspNetCore.Hosting.IWebHostBuilder},System.Int32,Neon.Xunit.TestOutputWriter,Neon.Diagnostics.LogLevel)" /><meta name="Description" content="Used to start the fixture within a ." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Xunit" /><meta name="file" content="M_Neon_Xunit_AspNetFixture_StartAsComposed__1" /><meta name="guid" content="M_Neon_Xunit_AspNetFixture_StartAsComposed__1" /><link type="text/css" rel="stylesheet" href="styles/highlight.css" /><script type="text/javascript" src="scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Xunit.htm" title="Neon.Xunit" tocid="N_Neon_Xunit">Neon.Xunit</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Xunit_AspNetFixture.htm" title="AspNetFixture Class" tocid="T_Neon_Xunit_AspNetFixture">AspNetFixture Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Neon_Xunit_AspNetFixture.htm" title="AspNetFixture Methods" tocid="Methods_T_Neon_Xunit_AspNetFixture">AspNetFixture Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Xunit_AspNetFixture_Dispose.htm" title="Dispose Method " tocid="Overload_Neon_Xunit_AspNetFixture_Dispose">Dispose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_AspNetFixture_Finalize.htm" title="Finalize Method " tocid="M_Neon_Xunit_AspNetFixture_Finalize">Finalize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_AspNetFixture_Reset.htm" title="Reset Method " tocid="M_Neon_Xunit_AspNetFixture_Reset">Reset Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_AspNetFixture_Restart__1.htm" title="Restart(TStartup) Method " tocid="M_Neon_Xunit_AspNetFixture_Restart__1">Restart(TStartup) Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Xunit_AspNetFixture_Start.htm" title="Start Method " tocid="Overload_Neon_Xunit_AspNetFixture_Start">Start Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_AspNetFixture_StartAsComposed__1.htm" title="StartAsComposed(TStartup) Method " tocid="M_Neon_Xunit_AspNetFixture_StartAsComposed__1">StartAsComposed(TStartup) Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>AspNetFixture<span id="LST4B130CE3_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_0?cpp=::|nu=.");</script>StartAsComposed<span id="LST4B130CE3_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TStartup</span><span id="LST4B130CE3_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Used to start the fixture within a <a href="T_Neon_Xunit_ComposedFixture.htm">ComposedFixture</a>.
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Xunit.htm">Neon.Xunit</a><br />
    <strong>Assembly:</strong>
   Neon.Xunit (in Neon.Xunit.dll) Version: 2.3.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">StartAsComposed</span>&lt;TStartup&gt;(
	<span class="identifier">Action</span>&lt;<span class="identifier">IWebHostBuilder</span>&gt; <span class="parameter">hostConfigurator</span> = <span class="keyword">null</span>,
	<span class="identifier">int</span> <span class="parameter">port</span> = 0,
	<span class="identifier">TestOutputWriter</span> <span class="parameter">logWriter</span> = <span class="keyword">null</span>,
	<span class="identifier">LogLevel</span> <span class="parameter">logLevel</span> = <span class="identifier">LogLevel</span>.None
)
<span class="keyword">where</span> TStartup : <span class="keyword">class</span>
</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">StartAsComposed</span>(<span class="keyword">Of</span> TStartup <span class="keyword">As</span> <span class="keyword">Class</span>) ( 
	Optional <span class="parameter">hostConfigurator</span> <span class="keyword">As</span> <span class="identifier">Action</span>(<span class="keyword">Of</span> <span class="identifier">IWebHostBuilder</span>) = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">port</span> <span class="keyword">As</span> <span class="identifier">Integer</span> = 0,
	Optional <span class="parameter">logWriter</span> <span class="keyword">As</span> <span class="identifier">TestOutputWriter</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">logLevel</span> <span class="keyword">As</span> <span class="identifier">LogLevel</span> = <span class="identifier">LogLevel</span>.None
)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TStartup&gt;
<span class="keyword">where</span> TStartup : <span class="keyword">ref class</span>
<span class="keyword">void</span> <span class="identifier">StartAsComposed</span>(
	<span class="identifier">Action</span>&lt;<span class="identifier">IWebHostBuilder</span>^&gt;^ <span class="parameter">hostConfigurator</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">int</span> <span class="parameter">port</span> = 0, 
	<span class="identifier">TestOutputWriter</span>^ <span class="parameter">logWriter</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">LogLevel</span> <span class="parameter">logLevel</span> = <span class="identifier">LogLevel</span>::None
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">StartAsComposed</span> : 
        ?<span class="parameter">hostConfigurator</span> : <span class="identifier">Action</span>&lt;<span class="identifier">IWebHostBuilder</span>&gt; * 
        ?<span class="parameter">port</span> : <span class="identifier">int</span> * 
        ?<span class="parameter">logWriter</span> : <span class="identifier">TestOutputWriter</span> * 
        ?<span class="parameter">logLevel</span> : <span class="identifier">LogLevel</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">hostConfigurator</span> = defaultArg <span class="identifier">hostConfigurator</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">port</span> = defaultArg <span class="identifier">port</span> 0
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">logWriter</span> = defaultArg <span class="identifier">logWriter</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">logLevel</span> = defaultArg <span class="identifier">logLevel</span> <span class="identifier">LogLevel</span>.None
*)
<span class="keyword">-&gt;</span> <span class="keyword">unit</span>  <span class="keyword">when</span> 'TStartup : <span class="keyword">not struct</span>
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">hostConfigurator</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.action-1" target="_blank">System<span id="LST4B130CE3_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Action</a><span id="LST4B130CE3_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting.iwebhostbuilder" target="_blank">IWebHostBuilder</a><span id="LST4B130CE3_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />Optional action providing for customization of the hosting environment.</dd><dt><span class="parameter">port</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank">System<span id="LST4B130CE3_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The port where the server will listen or zero to allow the operating system to select a free port.</dd><dt><span class="parameter">logWriter</span> (Optional)</dt><dd>Type: <a href="T_Neon_Xunit_TestOutputWriter.htm">Neon.Xunit<span id="LST4B130CE3_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TestOutputWriter</a><br />Optionally specifies a test output writer.</dd><dt><span class="parameter">logLevel</span> (Optional)</dt><dd>Type: <a href="T_Neon_Diagnostics_LogLevel.htm">Neon.Diagnostics<span id="LST4B130CE3_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4B130CE3_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LogLevel</a><br />Optionally specifies the log level.  This defaults to <a href="T_Neon_Diagnostics_LogLevel.htm">None</a>.</dd></dl><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TStartup</span></dt><dd>The startup class for the service.</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
             You can capture ASP.NET and service logs into your unit test logs by passing <span class="parameter">logWriter</span> as 
             non-null and <span class="parameter">logLevel</span> as something other than <a href="T_Neon_Diagnostics_LogLevel.htm">None</a>.  You'll need
             to obtain a <span class="nolink">ITestOutputHelper</span> instance from Xunit via dependency injection by adding a parameter
             to your test constructor and then creating a <a href="T_Neon_Xunit_TestOutputWriter.htm">TestOutputWriter</a> from it, like:
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyTest : IClassFixture&lt;AspNetFixture&gt;
{
    <span class="highlight-keyword">private</span> AspNetFixture               fixture;
    <span class="highlight-keyword">private</span> TestAspNetFixtureClient     client;
    <span class="highlight-keyword">private</span> TestOutputWriter            testWriter;

    <span class="highlight-keyword">public</span> Test_EndToEnd(AspNetFixture fixture, ITestOutputHelper outputHelper)
    {
        <span class="highlight-keyword">this</span>.fixture    = fixture;
        <span class="highlight-keyword">this</span>.testWriter = <span class="highlight-keyword">new</span> TestOutputWriter(outputHelper);

        fixture.Start&lt;Startup&gt;(logWriter: testWriter, logLevel: Neon.Diagnostics.LogLevel.Debug);

        client = <span class="highlight-keyword">new</span> TestAspNetFixtureClient()
        {
            BaseAddress = fixture.BaseAddress
        };
     }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Neon_Xunit_AspNetFixture.htm">AspNetFixture Class</a></div><div class="seeAlsoStyle"><a href="N_Neon_Xunit.htm">Neon.Xunit Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE, LLC.  All rights reserved.</p> </div></body></html>