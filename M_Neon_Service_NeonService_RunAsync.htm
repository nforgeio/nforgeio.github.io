<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NeonService.RunAsync Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="RunAsync method" /><meta name="System.Keywords" content="NeonService.RunAsync method" /><meta name="Microsoft.Help.F1" content="Neon.Service.NeonService.RunAsync" /><meta name="Microsoft.Help.Id" content="M:Neon.Service.NeonService.RunAsync(System.Boolean)" /><meta name="Description" content="Starts the service if it's not already running. This will call , which is your code that actually implements the service. Note that any service dependencies specified by will be verified as ready before will be called." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Service" /><meta name="file" content="M_Neon_Service_NeonService_RunAsync" /><meta name="guid" content="M_Neon_Service_NeonService_RunAsync" /><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Service.htm" title="Neon.Service" tocid="N_Neon_Service">Neon.Service</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Service_NeonService.htm" title="NeonService Class" tocid="T_Neon_Service_NeonService">NeonService Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Neon_Service_NeonService.htm" title="NeonService Methods" tocid="Methods_T_Neon_Service_NeonService">NeonService Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Service_NeonService_Dispose.htm" title="Dispose Method " tocid="Overload_Neon_Service_NeonService_Dispose">Dispose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_Exit.htm" title="Exit Method " tocid="M_Neon_Service_NeonService_Exit">Exit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_Finalize.htm" title="Finalize Method " tocid="M_Neon_Service_NeonService_Finalize">Finalize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_GetConfigFilePath.htm" title="GetConfigFilePath Method " tocid="M_Neon_Service_NeonService_GetConfigFilePath">GetConfigFilePath Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_GetEnvironmentVariable.htm" title="GetEnvironmentVariable Method " tocid="M_Neon_Service_NeonService_GetEnvironmentVariable">GetEnvironmentVariable Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_LoadEnvironmentVariables.htm" title="LoadEnvironmentVariables Method " tocid="M_Neon_Service_NeonService_LoadEnvironmentVariables">LoadEnvironmentVariables Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_OnRunAsync.htm" title="OnRunAsync Method " tocid="M_Neon_Service_NeonService_OnRunAsync">OnRunAsync Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_RunAsync.htm" title="RunAsync Method " tocid="M_Neon_Service_NeonService_RunAsync">RunAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_SetArguments.htm" title="SetArguments Method " tocid="M_Neon_Service_NeonService_SetArguments">SetArguments Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Service_NeonService_SetConfigFile.htm" title="SetConfigFile Method " tocid="Overload_Neon_Service_NeonService_SetConfigFile">SetConfigFile Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_SetConfigFilePath.htm" title="SetConfigFilePath Method " tocid="M_Neon_Service_NeonService_SetConfigFilePath">SetConfigFilePath Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_SetEnvironmentVariable.htm" title="SetEnvironmentVariable Method " tocid="M_Neon_Service_NeonService_SetEnvironmentVariable">SetEnvironmentVariable Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_SetRunningAsync.htm" title="SetRunningAsync Method " tocid="M_Neon_Service_NeonService_SetRunningAsync">SetRunningAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_SetStatusAsync.htm" title="SetStatusAsync Method " tocid="M_Neon_Service_NeonService_SetStatusAsync">SetStatusAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Service_NeonService_Stop.htm" title="Stop Method " tocid="M_Neon_Service_NeonService_Stop">Stop Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>NeonService<span id="LST24EE64E4_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_0?cpp=::|nu=.");</script>RunAsync Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Starts the service if it's not already running.  This will call <a href="M_Neon_Service_NeonService_OnRunAsync.htm">OnRunAsync<span id="LST24EE64E4_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_1?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>,
            which is your code that actually implements the service.  Note that any service dependencies
            specified by <a href="P_Neon_Service_NeonService_Dependencies.htm">Dependencies</a> will be verified as ready before <a href="M_Neon_Service_NeonService_OnRunAsync.htm">OnRunAsync<span id="LST24EE64E4_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
            will be called.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Service.htm">Neon.Service</a><br />
    <strong>Assembly:</strong>
   Neon.Service (in Neon.Service.dll) Version: 2.11.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="identifier">Task</span>&lt;<span class="identifier">int</span>&gt; <span class="identifier">RunAsync</span>(
	<span class="identifier">bool</span> <span class="parameter">disableProcessExit</span> = <span class="keyword">false</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Overridable</span> <span class="keyword">Function</span> <span class="identifier">RunAsync</span> ( 
	Optional <span class="parameter">disableProcessExit</span> <span class="keyword">As</span> <span class="identifier">Boolean</span> = <span class="keyword">false</span>
) <span class="keyword">As</span> <span class="identifier">Task</span>(<span class="keyword">Of</span> <span class="identifier">Integer</span>)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">virtual</span> <span class="identifier">Task</span>&lt;<span class="identifier">int</span>&gt;^ <span class="identifier">RunAsync</span>(
	<span class="identifier">bool</span> <span class="parameter">disableProcessExit</span> = <span class="keyword">false</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">abstract</span> <span class="identifier">RunAsync</span> : 
        ?<span class="parameter">disableProcessExit</span> : <span class="identifier">bool</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">disableProcessExit</span> = defaultArg <span class="identifier">disableProcessExit</span> <span class="keyword">false</span>
*)
<span class="keyword">-&gt;</span> <span class="identifier">Task</span>&lt;<span class="identifier">int</span>&gt; 
<span class="keyword">override</span> <span class="identifier">RunAsync</span> : 
        ?<span class="parameter">disableProcessExit</span> : <span class="identifier">bool</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">disableProcessExit</span> = defaultArg <span class="identifier">disableProcessExit</span> <span class="keyword">false</span>
*)
<span class="keyword">-&gt;</span> <span class="identifier">Task</span>&lt;<span class="identifier">int</span>&gt; </pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">disableProcessExit</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LST24EE64E4_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />
            Optionally specifies that the hosting process should not be terminated 
            when the service exists.  This is typically used for testing or debugging.
            This defaults to <span class="code">false</span>.
            </dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank">Task</a><span id="LST24EE64E4_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank">Int32</a><span id="LST24EE64E4_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />The service exit code.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            For production, this method will not return until the service is expicitly 
            stopped via a call to <a href="M_Neon_Service_NeonService_Stop.htm">Stop<span id="LST24EE64E4_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_6?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> or the <a href="P_Neon_Service_NeonService_Terminator.htm">Terminator</a> 
            handles a stop signal.  For test environments, this method will call
            <a href="M_Neon_Service_NeonService_OnRunAsync.htm">OnRunAsync<span id="LST24EE64E4_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_7?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> on a new thread and returns immediately while the
            service continues to run in parallel.
            </td></tr></table></div><p>
            Service implementations must honor <a href="P_Neon_Service_NeonService_Terminator.htm">Terminator</a> termination
            signals by exiting the <a href="M_Neon_Service_NeonService_OnRunAsync.htm">OnRunAsync<span id="LST24EE64E4_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_8?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> method reasonably quickly (within
            30 seconds by default) when these occur.  They can do this by passing 
            <a href="P_Neon_Service_ProcessTerminator_CancellationToken.htm">CancellationToken</a> for <span class="code">async</span> calls
            and then catching the <a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception" target="_blank">TaskCanceledException</a> and returning
            from <a href="M_Neon_Service_NeonService_OnRunAsync.htm">OnRunAsync<span id="LST24EE64E4_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_9?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.
            </p><p>
            Another technique for synchronous code is to explicitly check the 
            <a href="P_Neon_Service_ProcessTerminator_CancellationToken.htm">CancellationToken</a> token's  
            <a href="https://docs.microsoft.com/dotnet/api/system.threading.cancellationtoken.iscancellationrequested#System_Threading_CancellationToken_IsCancellationRequested" target="_blank">IsCancellationRequested</a> property and 
            return from your <a href="M_Neon_Service_NeonService_OnRunAsync.htm">OnRunAsync<span id="LST24EE64E4_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST24EE64E4_10?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> method when this is <span class="code">true</span>.
            You'll need to perform this check frequently so you may need
            to use timeouts to prevent blocking code from blocking for too long.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            It is not possible to restart a service after it's been stopped.
            </td></tr></table></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Neon_Service_NeonService.htm">NeonService Class</a></div><div class="seeAlsoStyle"><a href="N_Neon_Service.htm">Neon.Service Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p> </div></body></html>