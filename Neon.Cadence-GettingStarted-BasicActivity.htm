<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Basic activity</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="Neon.Cadence-GettingStarted-BasicActivity" /><meta name="Description" content="Cadence activities are used by workflows to interact with the outside world. This includes querying the state of an external entity as well as performing actions like updating a database, sending and email or SMS, or making calls to REST APIs." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="styles/highlight.css" /><script type="text/javascript" src="scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Neon.Cadence-Overview.htm" title="Neon.Cadence" tocid="e0db211a-7000-4a65-8353-335bc1f5c7e0">Neon.Cadence</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Neon.Cadence-GettingStarted-BasicWorkflow.htm" title="Getting started" tocid="b7d9e674-0e29-4757-a61c-0ec90cfa58c4">Getting started</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Cadence-GettingStarted-BasicWorkflow.htm" title="Basic workflow" tocid="1576a65f-94bd-4bed-9ff6-935b1c20fd87">Basic workflow</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Cadence-GettingStarted-BasicActivity.htm" title="Basic activity" tocid="2084205f-aa66-4426-a559-063658da86aa">Basic activity</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Cadence-GettingStarted-MultiStepWorkflows.htm" title="Multi-step workflows" tocid="77bd3d69-f67d-4d4e-9e97-631439d19e8f">Multi-step workflows</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Cadence-GettingStarted-Samples.htm" title="Cadence samples" tocid="f1fd2005-7e8f-4d93-8278-5752d1576cd4">Cadence samples</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>Basic activity</h1></td></tr></table><span class="introStyle"></span> <div id="ID1RBSection" class="collapsibleSection"><p>
          Cadence activities are used by workflows to interact with the outside world.  This includes
          querying the state of an external entity as well as performing actions like updating a database,
          sending and email or SMS, or making calls to REST APIs.
        </p><ul><li><p>
              Cadence requires that workflows <strong>never interact with the outside world directy</strong>.
              Workflows should only include the logic to decide what needs to be done to complete the operation and
              that the workflow will use activities to determine external state as well as actually perform any
              external operations.
            </p></li><li><p>
              Cadence activities <strong>must be used by workflows to iteract with the outside world.</strong></p></li></ul><p>
          A Cadence activity is coded much like a workflow.  You'll write an interface defining one or more activity
          operation methods followed by a class in that implements the activity.  Then you'll register the implementation
          in your workflow service and start a worker.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAFABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAFABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[ActivityInterface(TaskList = <span class="highlight-literal">"my-tasks"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> ISendHelloActivity : IActivity
{
    Task SendHelloAsync(<span class="highlight-keyword">string</span> email, <span class="highlight-keyword">string</span> name);
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> SendHelloActivity : ActivityBase, ISendHelloActivity
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">async</span> Task SendHelloAsync(<span class="highlight-keyword">string</span> email, <span class="highlight-keyword">string</span> name)
    {
        <span class="highlight-keyword">var</span> smtp    = <span class="highlight-keyword">new</span> SmtpClient(<span class="highlight-literal">"mail.my-company.com"</span>);
        <span class="highlight-keyword">var</span> message = <span class="highlight-keyword">new</span> MailMessage(<span class="highlight-literal">"bot@my-company.com"</span>, email);

        message.Body = $<span class="highlight-literal">"Hello {name}!"</span>;

        smtp.Send(message);
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFABAAA");</script><p>
          Here we define the <span class="code">ISendHelloActivity</span> interface which defines a method that
          sends an email message.  This method is tagged with a <a href="T_Neon_Cadence_ActivityMethodAttribute.htm">ActivityMethodAttribute</a>
          attribute indicating that it's an activity entry point.  Note that activity interfaces must inherit <a href="T_Neon_Cadence_IActivity.htm">IActivity</a>
          and that we tagged this with <a href="T_Neon_Cadence_ActivityInterfaceAttribute.htm">ActivityInterfaceAttribute</a>
          indicating that the activity will execute within the <strong>my-tasks</strong> task queue.
        </p><p>
          The <span class="code">SendHelloClass</span> implements the activity.  Activity classes must derive from
          <a href="T_Neon_Cadence_ActivityBase.htm">ActivityBase</a> and of course,
          must implement the activity interface.  In this example, the activity creates a <span class="code">SmtpClient</span>
          and then uses it to send an email message.
        </p><p>
          The following code shows how you can register and call the activity via a workflow.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[ActivityInterface(TaskList = <span class="highlight-literal">"my-tasks"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> ISendHelloActivity : IActivity
{
    [ActivityMethod]
    Task SendHelloAsync(<span class="highlight-keyword">string</span> email, <span class="highlight-keyword">string</span> name);
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> SendHelloActivity : ActivityBase, ISendHelloActivity
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">async</span> Task SendHelloAsync(<span class="highlight-keyword">string</span> email, <span class="highlight-keyword">string</span> name)
    {
        <span class="highlight-keyword">var</span> smtp    = <span class="highlight-keyword">new</span> SmtpClient(<span class="highlight-literal">"mail.my-company.com"</span>);
        <span class="highlight-keyword">var</span> message = <span class="highlight-keyword">new</span> MailMessage(<span class="highlight-literal">"bot@my-company.com"</span>, email);

        message.Body = $<span class="highlight-literal">"Hello {name}!"</span>;

        smtp.Send(message);
    }
}

[WorkflowInterface(TaskList = <span class="highlight-literal">"my-tasks"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IHelloWorkflow : IWorkflow
{
    [WorkflowMethod]
    Task HelloAsync(<span class="highlight-keyword">string</span> email, <span class="highlight-keyword">string</span> name);
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> HelloWorkflow : WorkflowBase, IHelloWorkflow
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">async</span> Task HelloAsync(<span class="highlight-keyword">string</span> email, <span class="highlight-keyword">string</span> name)
    {
        <span class="highlight-keyword">var</span> activityStub = Workflow.NewActivityStub&lt;ISendHelloActivity&gt;();

        <span class="highlight-keyword">await</span> activityStub.SendHelloAsync(email, name);
    }
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">class</span> Program
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">async</span> Task Main(<span class="highlight-keyword">string</span>[] args)
    {
        <span class="highlight-comment">// Connect to Cadence</span>

        <span class="highlight-keyword">var</span> settings = <span class="highlight-keyword">new</span> CadenceSettings()
        {
            DefaultDomain = <span class="highlight-literal">"my-domain"</span>,
            CreateDomain  = <span class="highlight-keyword">true</span>,
            Servers       = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">string</span>&gt;() { <span class="highlight-literal">"cadence://localhost:7933"</span> }
        };

        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">await</span> CadenceClient.ConnectAsync(settings))
        {
            <span class="highlight-comment">// Register your workflow and activity implementations to let </span>
            <span class="highlight-comment">// Cadence know we're open for business.</span>

            <span class="highlight-keyword">await</span> client.RegisterWorkflowAsync&lt;HelloWorkflow&gt;();
            <span class="highlight-keyword">await</span> client.RegisterActivityAsync&lt;SendHelloActivity&gt;();
            <span class="highlight-keyword">await</span> client.StartWorkerAsync(<span class="highlight-literal">"my-tasks"</span>);

            <span class="highlight-comment">// Invoke the workflow.</span>

            <span class="highlight-keyword">var</span> workflowStub = client.NewWorkflowStub&lt;IHelloWorkflow&gt;();

            <span class="highlight-keyword">await</span> workflowStub.HelloAsync(<span class="highlight-literal">"jeff@my-company.com"</span>, <span class="highlight-literal">"Jeff"</span>);
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABAAA");</script><p>
          You can see above that we define a new workflow that accepts an email address and a name as
          parameters, uses the <a href="P_Neon_Cadence_WorkflowBase_Workflow.htm">Workflow</a>
          property to create an activity stub and then invokes the activity, passing the email address
          and name.  The workflow service program also adds a call to 
          <a href="M_Neon_Cadence_CadenceClient_RegisterActivityAsync__1.htm">RegisterActivityAsync<span id="LST955E1496_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST955E1496_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TActivity<span id="LST955E1496_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST955E1496_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a>
          to register the activity implementation with Cadence.
        </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Neon_Cadence.htm">Neon.Cadence</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE, LLC.  All rights reserved.</p></div></body></html>