<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SignalMethodAttribute.Synchronous Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Synchronous property" /><meta name="System.Keywords" content="SignalMethodAttribute.Synchronous property" /><meta name="Microsoft.Help.F1" content="Neon.Temporal.SignalMethodAttribute.Synchronous" /><meta name="Microsoft.Help.F1" content="Neon.Temporal.SignalMethodAttribute.get_Synchronous" /><meta name="Microsoft.Help.F1" content="Neon.Temporal.SignalMethodAttribute.set_Synchronous" /><meta name="Microsoft.Help.Id" content="P:Neon.Temporal.SignalMethodAttribute.Synchronous" /><meta name="Description" content="EXPERIMENTAL: Indicates whether the tagged signal method should be generated as a synchronous method rather than as a fire-and-forget asynchronous call, which is the Temporal default. This property defaults to false." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Temporal" /><meta name="file" content="P_Neon_Temporal_SignalMethodAttribute_Synchronous" /><meta name="guid" content="P_Neon_Temporal_SignalMethodAttribute_Synchronous" /><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Temporal.htm" title="Neon.Temporal" tocid="N_Neon_Temporal">Neon.Temporal</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_SignalMethodAttribute.htm" title="SignalMethodAttribute Class" tocid="T_Neon_Temporal_SignalMethodAttribute">SignalMethodAttribute Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Neon_Temporal_SignalMethodAttribute.htm" title="SignalMethodAttribute Properties" tocid="Properties_T_Neon_Temporal_SignalMethodAttribute">SignalMethodAttribute Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="P_Neon_Temporal_SignalMethodAttribute_Name.htm" title="Name Property " tocid="P_Neon_Temporal_SignalMethodAttribute_Name">Name Property </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="P_Neon_Temporal_SignalMethodAttribute_Synchronous.htm" title="Synchronous Property " tocid="P_Neon_Temporal_SignalMethodAttribute_Synchronous">Synchronous Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>SignalMethodAttribute<span id="LST8E8B17C2_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E8B17C2_0?cpp=::|nu=.");</script>Synchronous Property </h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p><b>EXPERIMENTAL:</b> Indicates whether the tagged signal method should be generated 
            as a synchronous method rather than as a fire-and-forget asynchronous call, which is
            the Temporal default.  This property defaults to <span class="code">false</span>.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            Synchronous signals are considered experimental which means that this feature will 
            probably have a limited lifespan.  Temporal will introduce new <b>update</b>
            semantics at some point that will ultimately obsolete synchronous signals.
            </td></tr></table></div></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Temporal.htm">Neon.Temporal</a><br />
    <strong>Assembly:</strong>
   Neon.Temporal (in Neon.Temporal.dll) Version: 2.11.0-alpha<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">Synchronous</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">Synchronous</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">property</span> <span class="identifier">bool</span> <span class="identifier">Synchronous</span> {
	<span class="identifier">bool</span> <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<span class="identifier">bool</span> <span class="parameter">value</span>);
}</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">Synchronous</span> : <span class="identifier">bool</span> <span class="keyword">with</span> <span class="keyword">get</span>, <span class="keyword">set</span>
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">Boolean</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            Normal Temporal signals are sent to workflows asynchronously.  This means that the
            signal method being called by the application will return ragardless of whether the
            workflow has actually received and processed the signal or not.  This is quite
            efficient and has the advantage of not requring the sending application to wait
            for a somewhat indeterminate period of time for the workflow to receive and process
            the signal.
            </p><p>
            Sometimes though, you calling applications really need to know that the workflow
            actually handled a signal before moving on.  Applications may also need information
            back from the workflow, such as whether the workflow was able to process the signal
            request sucessfully.  So it would be nice if workflow signals could also return a
            result.
            </p><p>
            The Neon Temporal client supports synchronous signals by setting this property to
            <span class="code">true</span>.  When you do this, the Temporal client allows the signal method to
            return a result as a <a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank">Task<span id="LST8E8B17C2_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E8B17C2_1?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LST8E8B17C2_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E8B17C2_2?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> as well returning just a simple
            <a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank">Task</a>.  For both cases, the Temporal client will generate a signal
            stub that waits for the signal to be processed by the target workflow before
            returning.
            </p><p>
            This is an experimental feature.  Temporal server doesn't currently have a 
            synchronous way to interact with a running workflow, so the Neon Temporal client emulates
            this behavior using a combination of internal signals and queries.  As a developer, 
            you couild have done something like this yourself, but we felt this was going to be 
            such a useful  pattern that it was worth building into the client.  This will ultimately
            be replaced by upcoming Temporal server features.
            </p><p>
            See the documentation site for more information: <a href="https://doc.neonkube.com/Neon.Temporal-Workflow-SyncSignals.htm">Synchronous Signals</a></p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Neon_Temporal_SignalMethodAttribute.htm">SignalMethodAttribute Class</a></div><div class="seeAlsoStyle"><a href="N_Neon_Temporal.htm">Neon.Temporal Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p> </div></body></html>