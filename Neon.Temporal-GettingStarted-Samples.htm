<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Temporal samples</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="Neon.Temporal-GettingStarted-Samples" /><meta name="Description" content="This page describes our Temporal samples GitHub repository as well as the Xunit F:Neon.Xunit.Temporal.TemporalFixture we use to run these samples and our unit tests against Temporal running as a local Docker container." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="styles/highlight.css" /><script type="text/javascript" src="scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Neon.Temporal-Overview.htm" title="Neon.Temporal" tocid="5528b5b8-a2ef-4d0e-a613-0b3967d6fd4d">Neon.Temporal</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Neon.Temporal-GettingStarted-BasicWorkflow.htm" title="Getting started" tocid="eae3adcc-af2c-4f08-af4a-d5ddc085fae5">Getting started</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-GettingStarted-BasicWorkflow.htm" title="Basic workflow" tocid="71ca278a-dfb2-450f-965b-c5bc373538e1">Basic workflow</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-GettingStarted-BasicActivity.htm" title="Basic activity" tocid="a5cdc2a2-6f6d-4717-b2a4-deeefb8d55e6">Basic activity</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-GettingStarted-MultiStepWorkflows.htm" title="Multi-step workflows" tocid="4d8eef4e-c18c-4de6-9d22-dec9c1bfa586">Multi-step workflows</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-GettingStarted-Samples.htm" title="Temporal samples" tocid="509a142d-94b5-4bf5-ad04-0863b3209e7b">Temporal samples</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Activity-DendencyInjection.htm" title="Dependency Injection" tocid="f90ba0cc-4ae6-4b65-9e0e-fcd1e29eff9f">Dependency Injection</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>Temporal samples</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>
        This page describes our Temporal samples GitHub repository as well as the Xunit
        <span class="nolink">TemporalFixture</span>
        we use to run these samples and our unit tests against Temporal running as a local
        Docker container.
      </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Temporal Samples</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
          We're making some sample Temporal applications and unit tests available in our
          <a href="https://github.com/nforgeio/Temporal-samples" target="_blank">nforgeio/Temporal-samples</a>
          GitHub repository.  These have been tested on Windows 10 and a later version
          of OS/X using Visual Studio 2019 for Windows or Mac.  There's a decent chance
          that Visual Studio Code may work as well.  We have not tested these sample
          projects on Linux yet.
        </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Temporal Xunit test fixture</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          The Temporal Java and Go clients provide in-memory emulations of Temporal
          server functionality for unit testing workflows and activities.  The .NET client
          doesn't support this yet, but we'll be looking into adding this in the future.
          In the meantime, you can reference the <strong>Neon.Xunit.Temporal</strong> 
          nugate package in your unit test projects and use the
          <span class="nolink">TemporalFixture</span>
          to quickly spin up a Docker stack including Temporal server, it's Web UI, as well
          as its backing Cassandra database.
        </p><div class="alert"><table><tr><th><img src="icons/AlertCaution.png" alt="Caution note" />Â Caution</th></tr><tr><td><p>
            On Windows, we had to increase the Docker CPU setting from 2 to 4 CPUs and
            the RAM allocated to Docker from 2GiB to 4 GiB.  The original settings didn't
            provide enough resources for the three combined services to run reliably.
            This means your Windows workstation will require about 8GiB of RAM and
            at least 3 CPU cores.
          </p><p>
            This is less of an issue for OS/X and Linux, because Docker is implemented
            natively for those operating systems as opposed to the Hyper-V currently
            required for Windows Docker.
          </p></td></tr></table></div><p>
          You'll find examples using <span class="nolink">TemporalFixture</span>
          in our samples reporistory:
          <a href="https://hub.docker.com/repository/docker/nkubeio/Temporal-dev" target="_blank">nkubio/Temporal-dev</a></p><p>
          You can also spin up the Temporal stack manually by saving the following Docker stack
          (compose) definition to a file like <strong>temporal.yml</strong>:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EADABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EADABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EADABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">version: '3.5'

services:
  cassandra:
    image: cassandra:3.11
    ports:
      - "9042:9042"
  temporal:
    image: temporalio/auto-setup:0.21.1
    ports:
      - "7233:7233"
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml"
    depends_on:
      - cassandra
  temporal-web:
    image: temporalio/web:0.21.1
    environment:
      - "TEMPORAL_GRPC_ENDPOINT=temporal:7233"
    ports:
      - "8088:8088"
    depends_on:
      - temporal</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EADABAAA");</script><p>
          Then you can start or stop the Temporal stack using the following commands:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EABABAAA_tab1" class="codeSnippetContainerTabSingle">Batch Script</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"># Start the Temporal stack:

docker stack deploy -c temporal.yml temporal-dev

# Stop/<span class="highlight-keyword">rem</span><span class="highlight-comment">ove the Temporal stack:</span>

docker stack rm temporal-dev</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABABAAA");</script><div class="alert"><table><tr><th><img src="icons/AlertCaution.png" alt="Caution note" />Â Caution</th></tr><tr><td><p>
            The commands above will name the stack <strong>temporal-dev</strong> and we
            recommend that you continue to follow this convention which is compatible with our
            <a href="T_Neon_Xunit_Temporal_TemporalFixture.htm">TemporalFixture</a>
            which can be used to spin up Temporal stacks that can integrate cleanly with Xunit
            based tests.
          </p><p>
            By using the same <strong>temporal-dev</strong> stack name,
            <a href="T_Neon_Xunit_Temporal_TemporalFixture.htm">TemporalFixture</a>
            will be able to start/restart this stack while avoiding potential network port 
            conflicts.
          </p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Neon_Temporal.htm">Neon.Temporal</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p></div></body></html>