<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>TestHelper.RunFixture(T) Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="RunFixture%3CT%3E method" /><meta name="System.Keywords" content="RunFixture(Of T) method" /><meta name="System.Keywords" content="TestHelper.RunFixture%3CT%3E method" /><meta name="System.Keywords" content="TestHelper.RunFixture(Of T) method" /><meta name="Microsoft.Help.F1" content="Neon.Xunit.TestHelper.RunFixture``1" /><meta name="Microsoft.Help.Id" content="M:Neon.Xunit.TestHelper.RunFixture``1(System.Object[])" /><meta name="Description" content="Used to run a outside of a unit test." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Xunit" /><meta name="file" content="M_Neon_Xunit_TestHelper_RunFixture__1" /><meta name="guid" content="M_Neon_Xunit_TestHelper_RunFixture__1" /><link type="text/css" rel="stylesheet" href="styles/highlight.css" /><script type="text/javascript" src="scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Xunit.htm" title="Neon.Xunit" tocid="N_Neon_Xunit">Neon.Xunit</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Xunit_TestHelper.htm" title="TestHelper Class" tocid="T_Neon_Xunit_TestHelper">TestHelper Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Neon_Xunit_TestHelper.htm" title="TestHelper Methods" tocid="Methods_T_Neon_Xunit_TestHelper">TestHelper Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_TestHelper_AssertEqualLines.htm" title="AssertEqualLines Method " tocid="M_Neon_Xunit_TestHelper_AssertEqualLines">AssertEqualLines Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Xunit_TestHelper_AssertEquivalent.htm" title="AssertEquivalent Method " tocid="Overload_Neon_Xunit_TestHelper_AssertEquivalent">AssertEquivalent Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Xunit_TestHelper_AssertNotEquivalent.htm" title="AssertNotEquivalent Method " tocid="Overload_Neon_Xunit_TestHelper_AssertNotEquivalent">AssertNotEquivalent Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_TestHelper_AssertThrows__1.htm" title="AssertThrows(TException) Method " tocid="M_Neon_Xunit_TestHelper_AssertThrows__1">AssertThrows(TException) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_TestHelper_AssertThrowsAsync__1.htm" title="AssertThrowsAsync(TException) Method " tocid="M_Neon_Xunit_TestHelper_AssertThrowsAsync__1">AssertThrowsAsync(TException) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_TestHelper_CreateTestFolder.htm" title="CreateTestFolder Method " tocid="M_Neon_Xunit_TestHelper_CreateTestFolder">CreateTestFolder Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_TestHelper_RunFixture__1.htm" title="RunFixture(T) Method " tocid="M_Neon_Xunit_TestHelper_RunFixture__1">RunFixture(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_TestHelper_TempFolder.htm" title="TempFolder Method " tocid="M_Neon_Xunit_TestHelper_TempFolder">TempFolder Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>TestHelper<span id="LSTAFD771A1_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_0?cpp=::|nu=.");</script>RunFixture<span id="LSTAFD771A1_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LSTAFD771A1_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Used to run a <a href="T_Neon_Xunit_TestFixture.htm">TestFixture</a> outside of a unit test.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Xunit.htm">Neon.Xunit</a><br />
    <strong>Assembly:</strong>
   Neon.Xunit (in Neon.Xunit.dll) Version: 2.13.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">RunFixture</span>&lt;T&gt;(
	<span class="keyword">params</span> <span class="identifier">Object</span>[] <span class="parameter">args</span>
)
<span class="keyword">where</span> T : <span class="keyword">class</span>
</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Sub</span> <span class="identifier">RunFixture</span>(<span class="keyword">Of</span> T <span class="keyword">As</span> <span class="keyword">Class</span>) ( 
	<span class="keyword">ParamArray</span> <span class="parameter">args</span> <span class="keyword">As</span> <span class="identifier">Object</span>()
)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">where</span> T : <span class="keyword">ref class</span>
<span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">RunFixture</span>(
	... <span class="keyword">array</span>&lt;<span class="identifier">Object</span>^&gt;^ <span class="parameter">args</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">RunFixture</span> : 
        <span class="parameter">args</span> : <span class="identifier">Object</span>[] <span class="keyword">-&gt;</span> <span class="keyword">unit</span>  <span class="keyword">when</span> 'T : <span class="keyword">not struct</span>
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">args</span></dt><dd>Type: <span id="LSTAFD771A1_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_3?cpp=array&lt;");</script><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LSTAFD771A1_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><span id="LSTAFD771A1_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_5?cpp=&gt;|vb=()|nu=[]");</script><br />
            Optional parameters that will be passed to the constructor after the
            fixture parameter.  Note that the number of parameters and their types
            must match the constructor parameters after the fixture one.
            </dd></dl><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">T</span></dt><dd>Specifies the test type.</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            This is often used to run a <a href="T_Neon_Service_NeonService.htm">NeonService</a> using <a href="T_Neon_Xunit_NeonServiceFixture_1.htm">NeonServiceFixture<span id="LSTAFD771A1_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TService<span id="LSTAFD771A1_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
            or a collection of <a href="T_Neon_Service_NeonService.htm">NeonService</a> instances for debugging purposes using a combination
            of a <a href="T_Neon_Xunit_ComposedFixture.htm">ComposedFixture</a> with <a href="T_Neon_Xunit_NeonServiceFixture_1.htm">NeonServiceFixture<span id="LSTAFD771A1_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_8?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TService<span id="LSTAFD771A1_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_9?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> sub-fixtures.
            But, this can also be used for any <a href="T_Neon_Xunit_ITestFixture.htm">ITestFixture</a> implementation.
            </p><p>
            You'll need to implement a test class that derives from a <span class="nolink">IClassFixture</span>
            implementation and optionally implements <a href="https://docs.microsoft.com/dotnet/api/system.idisposable" target="_blank">IDisposable</a>.  You'll pass
            your test type as <span class="typeparameter">T</span>.  Your test class must include a public
            constructor that accepts a single parameter with the test fixture type and
            a public method with no parameters called <span class="code">public void Run()</span>.
            </p><p>
            This will look something like:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyTestRunner : IClassFixture&lt;ComposedFixture&gt;
{
    <span class="highlight-keyword">private</span> ComposedFixture                     composedFixture;
    <span class="highlight-keyword">private</span> NatsFixture                         natsFixture;
    <span class="highlight-keyword">private</span> NeonServiceFixture&lt;QueueService&gt;    queueServiceFixture;

    <span class="highlight-keyword">public</span> MyTestRunner(ComposedFixture fixture)
    {
        <span class="highlight-keyword">this</span>.composedFixture = fixture;

        composedFixture.Start(
            () =&gt;
            {
                composedFixture.AddFixture(<span class="highlight-literal">"nats"</span>, <span class="highlight-keyword">new</span> NatsFixture(),
                    natsFixture =&gt;
                    {
                       natsFixture.StartAsComposed();
                    });

                composedFixture.AddServiceFixture(<span class="highlight-literal">"queue-service"</span>, <span class="highlight-keyword">new</span> NeonServiceFixture&lt;QueueService&gt;(), () =&gt; CreateQueueService());
            });

        <span class="highlight-keyword">this</span>.natsFixture         = (NatsFixture)composedFixture[<span class="highlight-literal">"nats"</span>];
        <span class="highlight-keyword">this</span>.queueServiceFixture = (NeonServiceFixture&lt;QueueService&gt;)composedFixture[<span class="highlight-literal">"queue-service"</span>];
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Run()
    {
        <span class="highlight-comment">// The runner will stop when this method returns.  You can</span>
        <span class="highlight-comment">// also use this as an opportunity to perform any initialization.</span>
        <span class="highlight-comment">// For this example, we're just going to spin slowly forever.</span>

        <span class="highlight-keyword">while</span> (<span class="highlight-keyword">true</span>)
        {
            System.Threading.Thread.Sleep(<span class="highlight-number">10000</span>);
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABA");</script><p>
            This method performs these steps:
            </p><ol><li>
                Perform a runtime check to verify that <span class="typeparameter">T</span> has a public constructor
                that accepts a single parameter of type <span class="typeparameter">T</span> as well as any additional
                parameters.
                </li><li>
                Perform a runtime check to ensure that <span class="typeparameter">T</span> has a <span class="code">public void Run()</span>
                method.
                </li><li>
                Instantiate an instance of the test fixture specified by <span class="nolink">IClassFixture</span>.
                </li><li>
                Instantiate an instance of <span class="typeparameter">T</span>, passing the test fixture just created
                as the parameter.
                </li><li>
                Call the <span class="code">Run()</span> method and wait for it to return.
                </li><li>
                Dispose the test fixture.
                </li><li>
                Call <a href="https://docs.microsoft.com/dotnet/api/system.idisposable.dispose#System_IDisposable_Dispose" target="_blank">Dispose<span id="LSTAFD771A1_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFD771A1_10?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>, if implemented by the test class.
                </li><li>
                The method returns.
                </li></ol></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Neon_Xunit_TestHelper.htm">TestHelper Class</a></div><div class="seeAlsoStyle"><a href="N_Neon_Xunit.htm">Neon.Xunit Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p> </div></body></html>