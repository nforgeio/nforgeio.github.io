<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Workflow.NewActivityFutureStub(TActivityInterface) Method (String, ActivityOptions)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Neon.Cadence.Workflow.NewActivityFutureStub``1(System.String,Neon.Cadence.ActivityOptions)" /><meta name="Description" content="Creates a specialized stub suitable for starting and running an activity in parallel with other workflow operations such as child workflows or activities." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Cadence" /><meta name="file" content="M_Neon_Cadence_Workflow_NewActivityFutureStub__1" /><meta name="guid" content="M_Neon_Cadence_Workflow_NewActivityFutureStub__1" /><link type="text/css" rel="stylesheet" href="styles/highlight.css" /><script type="text/javascript" src="scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Cadence.htm" title="Neon.Cadence" tocid="N_Neon_Cadence">Neon.Cadence</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Cadence_Workflow.htm" title="Workflow Class" tocid="T_Neon_Cadence_Workflow">Workflow Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Neon_Cadence_Workflow.htm" title="Workflow Methods" tocid="Methods_T_Neon_Cadence_Workflow">Workflow Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Cadence_Workflow_NewActivityFutureStub.htm" title="NewActivityFutureStub Method " tocid="Overload_Neon_Cadence_Workflow_NewActivityFutureStub">NewActivityFutureStub Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Cadence_Workflow_NewActivityFutureStub__1.htm" title="NewActivityFutureStub(TActivityInterface) Method (String, ActivityOptions)" tocid="M_Neon_Cadence_Workflow_NewActivityFutureStub__1">NewActivityFutureStub(TActivityInterface) Method (String, ActivityOptions)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Cadence_Workflow_NewActivityFutureStub.htm" title="NewActivityFutureStub Method (String, ActivityOptions)" tocid="M_Neon_Cadence_Workflow_NewActivityFutureStub">NewActivityFutureStub Method (String, ActivityOptions)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>Workflow<span id="LSTC6547079_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_0?cpp=::|nu=.");</script>NewActivityFutureStub<span id="LSTC6547079_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TActivityInterface</span><span id="LSTC6547079_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Method (String, ActivityOptions)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Creates a specialized stub suitable for starting and running an activity in parallel
             with other workflow operations such as child workflows or activities.
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Cadence.htm">Neon.Cadence</a><br />
    <strong>Assembly:</strong>
   Neon.Cadence (in Neon.Cadence.dll) Version: 2.1.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">ActivityFutureStub</span>&lt;TActivityInterface&gt; <span class="identifier">NewActivityFutureStub</span>&lt;TActivityInterface&gt;(
	<span class="identifier">string</span> <span class="parameter">methodName</span> = <span class="keyword">null</span>,
	<span class="identifier">ActivityOptions</span> <span class="parameter">options</span> = <span class="keyword">null</span>
)
<span class="keyword">where</span> TActivityInterface : <span class="keyword">class</span>
</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewActivityFutureStub</span>(<span class="keyword">Of</span> TActivityInterface <span class="keyword">As</span> <span class="keyword">Class</span>) ( 
	Optional <span class="parameter">methodName</span> <span class="keyword">As</span> <span class="identifier">String</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">options</span> <span class="keyword">As</span> <span class="identifier">ActivityOptions</span> = <span class="keyword">Nothing</span>
) <span class="keyword">As</span> <span class="identifier">ActivityFutureStub</span>(<span class="keyword">Of</span> TActivityInterface)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TActivityInterface&gt;
<span class="keyword">where</span> TActivityInterface : <span class="keyword">ref class</span>
<span class="identifier">ActivityFutureStub</span>&lt;TActivityInterface&gt;^ <span class="identifier">NewActivityFutureStub</span>(
	<span class="identifier">String</span>^ <span class="parameter">methodName</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">ActivityOptions</span>^ <span class="parameter">options</span> = <span class="keyword">nullptr</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">NewActivityFutureStub</span> : 
        ?<span class="parameter">methodName</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">options</span> : <span class="identifier">ActivityOptions</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">methodName</span> = defaultArg <span class="identifier">methodName</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">options</span> = defaultArg <span class="identifier">options</span> <span class="keyword">null</span>
*)
<span class="keyword">-&gt;</span> <span class="identifier">ActivityFutureStub</span>&lt;'TActivityInterface&gt;  <span class="keyword">when</span> 'TActivityInterface : <span class="keyword">not struct</span>
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">methodName</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTC6547079_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />
             Optionally identifies the target activity method.  This is the name specified in
             <span class="code">[ActivityMethod]</span> attribute for the activity method or <span class="code">null</span>/empty for 
             the default activity method.
             </dd><dt><span class="parameter">options</span> (Optional)</dt><dd>Type: <a href="T_Neon_Cadence_ActivityOptions.htm">Neon.Cadence<span id="LSTC6547079_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ActivityOptions</a><br />Optionally specifies the activity options.</dd></dl><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TActivityInterface</span></dt><dd>The activity interface.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Neon_Cadence_ActivityFutureStub_1.htm">ActivityFutureStub</a><span id="LSTC6547079_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TActivityInterface</span></span><span id="LSTC6547079_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />The new <a href="T_Neon_Cadence_ActivityFutureStub_1.htm">ActivityFutureStub<span id="LSTC6547079_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_7?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TActivityInterface<span id="LSTC6547079_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_8?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.objectdisposedexception" target="_blank">ObjectDisposedException</a></td><td>Thrown if the associated Cadence client is disposed.</td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank">NotSupportedException</a></td><td>Thrown when this is called outside of a workflow entry point method.</td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
             Sometimes workflows need to run activities in parallel with other child workflows or
             activities.  Although the standard stubs return a <a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank">Task</a> or <a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank">Task<span id="LSTC6547079_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_9?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LSTC6547079_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_10?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>,
             workflow developers are required to immediately <span class="code">await</span> every call to these stubs to 
             ensure that the workflow will execute consistently when replayed from history.  This 
             means that you must not do something like this:
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAGABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAGABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IMyActivity : IActivity
{
    [ActivityMethod(Name = <span class="highlight-literal">"activity-1"</span>]
    Task&lt;<span class="highlight-keyword">string</span>&gt; FooActivityAsync(<span class="highlight-keyword">string</span> arg);

    [ActivityMethod(Name = <span class="highlight-literal">"activity-2"</span>]
    Task&lt;<span class="highlight-keyword">string</span>&gt; BarActivityAsync(<span class="highlight-keyword">string</span> arg);
}

<span class="highlight-keyword">public</span> MyActivity : ActivityBase, IMyActivity
{
    <span class="highlight-keyword">public</span> Task&lt;<span class="highlight-keyword">string</span>&gt; FooActivityAsync(<span class="highlight-keyword">string</span> arg)
    {
        <span class="highlight-keyword">await</span> Task.FromResult(arg);
    }

    <span class="highlight-keyword">public</span> Task&lt;<span class="highlight-keyword">string</span>&gt; BarActivityAsync(<span class="highlight-keyword">string</span> arg)
    {
        <span class="highlight-keyword">await</span> Task.FromResult(arg);
    }
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyWorkflow : WorkflowBase, IMyWorkflow
{
    [WorkflowMethod]
    <span class="highlight-keyword">public</span> Task MainAsync()
    {
        <span class="highlight-keyword">var</span> stub     = Workflow.NewActivityStub&lt;IMyActivity&gt;();
        <span class="highlight-keyword">var</span> fooTask  = stub.FooActivity(<span class="highlight-literal">"FOO"</span>);
        <span class="highlight-keyword">var</span> barValue = <span class="highlight-keyword">await</span> stub.BarActivityAsync(<span class="highlight-literal">"BAR"</span>);
        <span class="highlight-keyword">var</span> fooValue = <span class="highlight-keyword">await</span> fooTask;
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGABA");</script><p>
             The <span class="code">MainAsync()</span> workflow method here starts an activity but doesn't immediately
             <span class="code">await</span> it.  It then runs another activity in parallel and then after the second 
             activity returns, the workflow awaits the first activity.  This pattern is not supported 
             by <b>Neon.Cadence</b> because all workflow related operations need to be immediately
             awaited to ensure that operations will complete in a consistent order when workflows 
             are replayed.
             </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
             The reason for this restriction is related to how the current <b>Neon.Cadence</b> implementation
             uses an embedded GOLANG Cadence client to actually communicate with a Cadence cluster.  This
             may be relaxed in the future if/when we implement native support for the Cadence protocol.
             </td></tr></table></div><p>
             A correct implementation would look something like this:
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IMyActivity : IActivity
{
    [ActivityMethod(Name = <span class="highlight-literal">"foo"</span>]
    Task&lt;<span class="highlight-keyword">string</span>&gt; FooAsync(<span class="highlight-keyword">string</span> arg);

    [ActivityMethod(Name = <span class="highlight-literal">"bar"</span>]
    Task&lt;<span class="highlight-keyword">string</span>&gt; BarAsync(<span class="highlight-keyword">string</span> arg);
}

<span class="highlight-keyword">public</span> MyActivity : ActivityBase, IMyActivity
{
    <span class="highlight-keyword">public</span> Task&lt;<span class="highlight-keyword">string</span>&gt; FooAsync(<span class="highlight-keyword">string</span> arg)
    {
        <span class="highlight-keyword">await</span> Task.FromResult(arg);
    }

    <span class="highlight-keyword">public</span> Task&lt;<span class="highlight-keyword">string</span>&gt; BarAsync(<span class="highlight-keyword">string</span> arg)
    {
        <span class="highlight-keyword">await</span> Task.FromResult(arg);
    }
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyWorkflow : WorkflowBase, IMyWorkflow
{
    [WorkflowMethod]
    <span class="highlight-keyword">public</span> Task MainAsync()
    {
        <span class="highlight-keyword">var</span> fooStub  = Workflow.NewActivityFutureStub(<span class="highlight-literal">"foo"</span>);
        <span class="highlight-keyword">var</span> future   = fooStub.StartAsync&lt;<span class="highlight-keyword">string</span>&gt;(<span class="highlight-literal">"FOO"</span>);
        <span class="highlight-keyword">var</span> barStub  = Workflow.NewActivityStub&lt;IMyActivity&gt;();
        <span class="highlight-keyword">var</span> barValue = <span class="highlight-keyword">await</span> barStub.BarAsync(<span class="highlight-literal">"BAR"</span>);   <span class="highlight-comment">// Returns: "BAR"</span>
        <span class="highlight-keyword">var</span> fooValue = <span class="highlight-keyword">await</span> future.GetAsync();         <span class="highlight-comment">// Returns: "FOO"</span>
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABA");</script><p>
             Here we call <span class="selflink">NewActivityFutureStub<span id="LSTC6547079_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TActivityInterface<span id="LSTC6547079_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String, ActivityOptions)</span> specifying
             <b>"foo"</b> as the workflow method name.  This matches the <span class="code">[ActivityMethod(Name = "foo")]</span> decorating
             the <span class="code">FooAsync()</span> activity interface method.  Then we start the first activity by awaiting 
             <a href="T_Neon_Cadence_ActivityFutureStub_1.htm">ActivityFutureStub<span id="LSTC6547079_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_13?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TActivityInterface<span id="LSTC6547079_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_14?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.  This returns an <a href="T_Neon_Tasks_IAsyncFuture_1.htm">IAsyncFuture<span id="LSTC6547079_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_15?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTC6547079_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_16?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> whose 
             <a href="M_Neon_Tasks_IAsyncFuture_GetAsync.htm">GetAsync<span id="LSTC6547079_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_17?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> method returns the activity result.  The code above calls this to
             retrieve the result from the first activity after executing the second activity in parallel.
             </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
             You must take care to pass parameters that match the target method.  <b>Neon.Cadence</b> does check these at
             runtime, but there is no compile-time checking for this scheme.
             </p><p>
             You'll also need to cast the <a href="M_Neon_Tasks_IAsyncFuture_GetAsync.htm">GetAsync<span id="LSTC6547079_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_18?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> result to the actual type (if required).
             This method always returns the <span class="code">object</span> type even if referenced workflow and activity methods return
             <span class="code">void</span>.  <a href="M_Neon_Tasks_IAsyncFuture_GetAsync.htm">GetAsync<span id="LSTC6547079_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6547079_19?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> will return <span class="code">null</span> in these cases.
             </p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Neon_Cadence_Workflow.htm">Workflow Class</a></div><div class="seeAlsoStyle"><a href="Overload_Neon_Cadence_Workflow_NewActivityFutureStub.htm">NewActivityFutureStub Overload</a></div><div class="seeAlsoStyle"><a href="N_Neon_Cadence.htm">Neon.Cadence Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE, LLC.  All rights reserved.</p> </div></body></html>