<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>AsyncReaderWriterLock Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="AsyncReaderWriterLock class" /><meta name="System.Keywords" content="Neon.Tasks.AsyncReaderWriterLock class" /><meta name="Microsoft.Help.F1" content="Neon.Tasks.AsyncReaderWriterLock" /><meta name="Microsoft.Help.Id" content="T:Neon.Tasks.AsyncReaderWriterLock" /><meta name="Description" content="Implements an async/await friendly equivalent of ReaderWriterLock." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Tasks" /><meta name="file" content="T_Neon_Tasks_AsyncReaderWriterLock" /><meta name="guid" content="T_Neon_Tasks_AsyncReaderWriterLock" /><link type="text/css" rel="stylesheet" href="styles/highlight.css" /><script type="text/javascript" src="scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Tasks.htm" title="Neon.Tasks" tocid="N_Neon_Tasks">Neon.Tasks</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Tasks_AsyncReaderWriterLock.htm" title="AsyncReaderWriterLock Class" tocid="T_Neon_Tasks_AsyncReaderWriterLock">AsyncReaderWriterLock Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Tasks_AsyncReaderWriterLock__ctor.htm" title="AsyncReaderWriterLock Constructor " tocid="M_Neon_Tasks_AsyncReaderWriterLock__ctor">AsyncReaderWriterLock Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Neon_Tasks_AsyncReaderWriterLock.htm" title="AsyncReaderWriterLock Methods" tocid="Methods_T_Neon_Tasks_AsyncReaderWriterLock">AsyncReaderWriterLock Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>AsyncReaderWriterLock Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Implements an <span class="code">async</span>/<span class="code">await</span> friendly equivalent of <b>ReaderWriterLock</b>.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LST52D4D7D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST52D4D7D_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Neon.Tasks<span id="LST52D4D7D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST52D4D7D_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AsyncReaderWriterLock</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Tasks.htm">Neon.Tasks</a><br />
    <strong>Assembly:</strong>
   Neon.Common (in Neon.Common.dll) Version: 1.0.3<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">AsyncReaderWriterLock</span> : <span class="identifier">IDisposable</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">AsyncReaderWriterLock</span>
	<span class="keyword">Implements</span> <span class="identifier">IDisposable</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">AsyncReaderWriterLock</span> : <span class="identifier">IDisposable</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">AsyncReaderWriterLock</span> =  
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">IDisposable</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">AsyncReaderWriterLock</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Tasks_AsyncReaderWriterLock__ctor.htm">AsyncReaderWriterLock</a></td><td><div class="summary">
            Constructor.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Tasks_AsyncReaderWriterLock_Close.htm">Close</a></td><td><div class="summary">
            Releases any important resources associated with the instance.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Tasks_AsyncReaderWriterLock_Dispose.htm">Dispose<span id="LST52D4D7D_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST52D4D7D_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Releases any important resources associated with the instance.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Neon_Tasks_AsyncReaderWriterLock_Dispose_1.htm">Dispose(Boolean)</a></td><td><div class="summary">
            Releases any important resources associated with the instance.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Neon_Tasks_AsyncReaderWriterLock_Finalize.htm">Finalize</a></td><td><div class="summary">
            Finalizer.
            </div> (Overrides <a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank">Object<span id="LST52D4D7D_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST52D4D7D_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Finalize<span id="LST52D4D7D_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST52D4D7D_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Tasks_AsyncReaderWriterLock_GetReadLockAsync.htm">GetReadLockAsync</a></td><td><div class="summary">
            Acquires a non-exclusive read lock.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Tasks_AsyncReaderWriterLock_GetWriteLockAsync.htm">GetWriteLockAsync</a></td><td><div class="summary">
            Acquires an exclusive write lock.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
            This class can be used to grant a single writer task exclusive access to a resource
            or multiple reader tasks.  This class is pretty easy to use.  Simply instantiate
            an instance and then call <a href="M_Neon_Tasks_AsyncReaderWriterLock_GetReadLockAsync.htm">GetReadLockAsync<span id="LST52D4D7D_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST52D4D7D_5?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> or <a href="M_Neon_Tasks_AsyncReaderWriterLock_GetWriteLockAsync.htm">GetWriteLockAsync<span id="LST52D4D7D_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST52D4D7D_6?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
            within a <span class="code">using</span> statement:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAGBBA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAGBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAGBBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAGBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> rwLock = <span class="highlight-keyword">new</span> AsyncReaderWriterLock();

<span class="highlight-keyword">using</span> (<span class="highlight-keyword">await</span> rwLock.GetReadLockAsync())
{
    <span class="highlight-comment">// Protected reading code</span>
}

<span class="highlight-keyword">using</span> (<span class="highlight-keyword">await</span> rwLock.GetWriteLockAsync())
{
    <span class="highlight-comment">// Protected writing code</span>
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAGBBA");</script><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            Be very sure to include the <span class="code">await</span> within the <span class="code">using</span> statement to avoid
            hard to debug problems.  The <span class="code">await</span> ensures that the <span class="code">using</span> statement
            will dispose the acquired lock as opposed to the <a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank">Task</a> that returns
            the lock.
            </td></tr></table></div><p>
            Applications that cannot use a <span class="code">using</span> statement may release the lock explicitly
            by disposing the object returned by the lock method, like this:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EADBBA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EADBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EADBBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EADBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> rwLock   = <span class="highlight-keyword">new</span> AsyncReaderWriterLock();
<span class="highlight-keyword">var</span> readLock = <span class="highlight-keyword">await</span> rwLock.GetReadLockAsync();

<span class="highlight-comment">// Protected reading code.</span>

readLock.Dispose();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EADBBA");</script><p><span class="selflink">AsyncReaderWriterLock</span>'s <a href="M_Neon_Tasks_AsyncReaderWriterLock_Dispose.htm">Dispose<span id="LST52D4D7D_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST52D4D7D_7?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> method ensures that any tasks
            waiting for a lock will be unblocked with an <a href="https://docs.microsoft.com/dotnet/api/system.objectdisposedexception" target="_blank">ObjectDisposedException</a>.
            </p><p>
            This class is implemented is fairly simple and always favors writers over readers.
            Also, all waiting readers will be released together.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><span class="selflink">AsyncReaderWriterLock</span> does not support any kind of reentrant <a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank">Task</a>
            locking support.  Child tasks will be considered to be completely independent of the parent
            and <b>will not</b> inherit the parent's lock and a single task will not be able to acquire 
            the same lock multiple times.
            </td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Thread Safety</span></div><div id="ID6RBSection" class="collapsibleSection">Instance members of this type are safe for multi-threaded operations. </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Neon_Tasks.htm">Neon.Tasks Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2016-2019 by neonFORGE, LLC.  All rights reserved.</p> </div></body></html>