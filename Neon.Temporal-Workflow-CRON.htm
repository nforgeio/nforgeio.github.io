<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Distributed CRON</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="Neon.Temporal-Workflow-CRON" /><meta name="Description" content="Temporal allows you to execute workflows on a recurring schedule, like a traditional Linux CRON job. All you need to do is initialize a T:Neon.Temporal.WorkflowOptions instance, setting the P:Neon.Temporal.ChildWorkflowOptions." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="styles/highlight.css" /><script type="text/javascript" src="scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Neon.Temporal-Overview.htm" title="Neon.Temporal" tocid="5528b5b8-a2ef-4d0e-a613-0b3967d6fd4d">Neon.Temporal</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Neon.Temporal-Workflow-CodingRules.htm" title="Workflow details" tocid="534d0b51-23d9-4ab9-b897-980a97592ff5">Workflow details</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-CodingRules.htm" title="Coding rules" tocid="7377a962-2a8a-498b-b9ad-2de58541bccb">Coding rules</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-IDsExecutions.htm" title="IDs &amp; executions" tocid="1e741adc-714f-4a77-82aa-ff1756ee1c9a">IDs &amp; executions</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-Scheduling.htm" title="Timeouts" tocid="b86e3e81-ffe5-4a59-b840-aebe31bd5014">Timeouts</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-ChildWorkflows.htm" title="Child workflows" tocid="fef3cdc8-41e8-4c31-a81d-a6857d202faa">Child workflows</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-GettingStarted-Parallel.htm" title="Parallel operations" tocid="82d58fc1-98ce-4872-bf3d-7530f9be1a9e">Parallel operations</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-Options.htm" title="Options" tocid="e74d1092-9a9d-429f-bbe2-7ad595d7a6fe">Options</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-Queries.htm" title="Queries" tocid="2de5ef53-412c-4f8d-b40b-69f06db7762b">Queries</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-SignalQueues.htm" title="Signals &amp; queues" tocid="fef4f5f1-ee69-479c-9321-6586ec5d45f9">Signals &amp; queues</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-SyncSignals.htm" title="Synchronous signals" tocid="1284aec5-7464-4243-aa38-75366c26a031">Synchronous signals</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Activity-ContinueAsNew.htm" title="Continue as new" tocid="397dcfd2-0d7a-4148-b2a5-372f77807184">Continue as new</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="Neon.Temporal-Workflow-CRON.htm" title="Distributed CRON" tocid="fd66b149-f9e7-4ac4-90d6-64c1310b38f3">Distributed CRON</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>Distributed CRON</h1></td></tr></table><span class="introStyle"></span> <div id="ID1RBSection" class="collapsibleSection"><p>
          Temporal allows you to execute workflows on a recurring schedule, like a traditional
          Linux CRON job.  All you need to do is initialize a <a href="T_Neon_Temporal_WorkflowOptions.htm">WorkflowOptions</a>
          instance, setting the <a href="P_Neon_Temporal_ChildWorkflowOptions_CronSchedule.htm">CronSchedule</a>
          string to the schedule.  This string is formatted just like a Linux CRON schedule.  This handy
          calculator shows how this works:
          <a href="https://crontab.guru" target="_blank">https://crontab.guru</a></p><p>
          CRON workflow behaviors:
        </p><ul /><p>
          Here's how you can start a CRON workflow:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAFABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAFABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[WorkflowInterface(TaskQueue = <span class="highlight-literal">"my-tasks"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> ICronWorkflow : IWorkflow
{
    [WorkflowMethod(Name = <span class="highlight-literal">"backup"</span>)]
    Task BackupAsync();
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">class</span> Program
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">async</span> Task Main(<span class="highlight-keyword">string</span>[] args)
    {
        <span class="highlight-comment">// Connect to Temporal</span>

        <span class="highlight-keyword">var</span> settings = <span class="highlight-keyword">new</span> TemporalSettings()
        {
            Namespace       = <span class="highlight-literal">"my-namespace"</span>,
            CreateNamespace = <span class="highlight-keyword">true</span>,
            HostPort        = <span class="highlight-literal">"localhost:7933"</span>
        };

        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">await</span> TemporalClient.ConnectAsync(settings))
        {
            <span class="highlight-keyword">var</span> stub = client.NewWorkflowFutureStub&lt;ICronWorkflow&gt;(
                <span class="highlight-literal">"backup"</span>,
                <span class="highlight-keyword">new</span> WorkflowOptions()
                {
                    <span class="highlight-comment">// Run the workflow every day at 1:00am UTC:</span>
                    CronSchedule = <span class="highlight-literal">"0 1 * * *"</span>
                }); ;

            <span class="highlight-keyword">await</span> stub.StartAsync();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFABAAA");</script><p>
          This example assumes that a workflow service implementing the <span class="code">ICronWorkflow </span> is
          already running somewhere.  The program connects to to Temporal and then calls
          <a href="M_Neon_Temporal_TemporalClient_NewWorkflowFutureStub__1.htm">NewWorkflowFutureStub<span id="LST2F531DAC_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2F531DAC_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TWorkflowInterface<span id="LST2F531DAC_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2F531DAC_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a>
          passing the workflow method name.  In this example, the name is <strong>backup</strong> which matches
          the name specified by the <a href="T_Neon_Temporal_WorkflowMethodAttribute.htm">WorkflowMethodAttribute</a>
          tagging the interface method.
        </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
            Workflow methods that are not tagged with a name, can be specified by passing 
            <span class="code">null</span> or <a href="https://docs.microsoft.com/dotnet/api/system.string.empty" target="_blank">Empty</a>.x
          </p></td></tr></table></div><p><a href="M_Neon_Temporal_TemporalClient_NewWorkflowFutureStub__1.htm">NewWorkflowFutureStub<span id="LST2F531DAC_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2F531DAC_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TWorkflowInterface<span id="LST2F531DAC_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2F531DAC_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a>
          returns an untyped workflow method stub that doesn't immediately wait for the workflow to complete.  This is useful
          for situations like starting a CRON workflow or for running multiple workflows in parallel.
        </p><p>
          Sometimes your CRON workflow will need to know whether whether it's being run for the first time
          or to retrieve information from the previous CRON run.  You can use 
          to determine if there was a previous run and then call 
          to obtain the previous result.
        </p><p>
          Note that this works even if one of the cron schedule runs failed. The next schedule will still get the last successful result if it 
          ever successfully completed at least once. For example,  for a daily cron workflow, if the first day run succeeds and the second day 
          fails, then the third day run will still get the result from first day's run using these APIs.
        </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Neon_Temporal.htm">Neon.Temporal</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p></div></body></html>