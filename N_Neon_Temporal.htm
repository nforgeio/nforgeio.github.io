<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Neon.Temporal Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Neon.Temporal namespace" /><meta name="Microsoft.Help.F1" content="Neon.Temporal" /><meta name="Microsoft.Help.Id" content="N:Neon.Temporal" /><meta name="Description" content="This namespace defines the Neon .NET client for the Uber Temporal workflow service." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Temporal" /><meta name="file" content="N_Neon_Temporal" /><meta name="guid" content="N_Neon_Temporal" /><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Temporal.htm" title="Neon.Temporal" tocid="N_Neon_Temporal">Neon.Temporal</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_AccessDeniedException.htm" title="AccessDeniedException Class" tocid="T_Neon_Temporal_AccessDeniedException">AccessDeniedException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_Activity.htm" title="Activity Class" tocid="T_Neon_Temporal_Activity">Activity Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityAttribute.htm" title="ActivityAttribute Class" tocid="T_Neon_Temporal_ActivityAttribute">ActivityAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityBase.htm" title="ActivityBase Class" tocid="T_Neon_Temporal_ActivityBase">ActivityBase Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityFutureStub.htm" title="ActivityFutureStub Class" tocid="T_Neon_Temporal_ActivityFutureStub">ActivityFutureStub Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityFutureStub_1.htm" title="ActivityFutureStub(TActivityInterface) Class" tocid="T_Neon_Temporal_ActivityFutureStub_1">ActivityFutureStub(TActivityInterface) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityHeartbeatTimeoutException.htm" title="ActivityHeartbeatTimeoutException Class" tocid="T_Neon_Temporal_ActivityHeartbeatTimeoutException">ActivityHeartbeatTimeoutException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityInterfaceAttribute.htm" title="ActivityInterfaceAttribute Class" tocid="T_Neon_Temporal_ActivityInterfaceAttribute">ActivityInterfaceAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityMethodAttribute.htm" title="ActivityMethodAttribute Class" tocid="T_Neon_Temporal_ActivityMethodAttribute">ActivityMethodAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityOptions.htm" title="ActivityOptions Class" tocid="T_Neon_Temporal_ActivityOptions">ActivityOptions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityStub.htm" title="ActivityStub Class" tocid="T_Neon_Temporal_ActivityStub">ActivityStub Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityTask.htm" title="ActivityTask Class" tocid="T_Neon_Temporal_ActivityTask">ActivityTask Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ActivityTypeException.htm" title="ActivityTypeException Class" tocid="T_Neon_Temporal_ActivityTypeException">ActivityTypeException Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_ArchivalStatus.htm" title="ArchivalStatus Enumeration" tocid="T_Neon_Temporal_ArchivalStatus">ArchivalStatus Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_BadRequestException.htm" title="BadRequestException Class" tocid="T_Neon_Temporal_BadRequestException">BadRequestException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_CancellationAlreadyRequestedException.htm" title="CancellationAlreadyRequestedException Class" tocid="T_Neon_Temporal_CancellationAlreadyRequestedException">CancellationAlreadyRequestedException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_CancelledException.htm" title="CancelledException Class" tocid="T_Neon_Temporal_CancelledException">CancelledException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ChildWorkflowFuture.htm" title="ChildWorkflowFuture Class" tocid="T_Neon_Temporal_ChildWorkflowFuture">ChildWorkflowFuture Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ChildWorkflowFuture_1.htm" title="ChildWorkflowFuture(TResult) Class" tocid="T_Neon_Temporal_ChildWorkflowFuture_1">ChildWorkflowFuture(TResult) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ChildWorkflowFutureStub.htm" title="ChildWorkflowFutureStub Class" tocid="T_Neon_Temporal_ChildWorkflowFutureStub">ChildWorkflowFutureStub Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ChildWorkflowOptions.htm" title="ChildWorkflowOptions Class" tocid="T_Neon_Temporal_ChildWorkflowOptions">ChildWorkflowOptions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ChildWorkflowStub_1.htm" title="ChildWorkflowStub(TWorkflowInterface) Class" tocid="T_Neon_Temporal_ChildWorkflowStub_1">ChildWorkflowStub(TWorkflowInterface) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ClientVersionNotSupportedException.htm" title="ClientVersionNotSupportedException Class" tocid="T_Neon_Temporal_ClientVersionNotSupportedException">ClientVersionNotSupportedException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ConnectException.htm" title="ConnectException Class" tocid="T_Neon_Temporal_ConnectException">ConnectException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ContinueAsNewException.htm" title="ContinueAsNewException Class" tocid="T_Neon_Temporal_ContinueAsNewException">ContinueAsNewException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ContinueAsNewOptions.htm" title="ContinueAsNewOptions Class" tocid="T_Neon_Temporal_ContinueAsNewOptions">ContinueAsNewOptions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_EntityNotExistsException.htm" title="EntityNotExistsException Class" tocid="T_Neon_Temporal_EntityNotExistsException">EntityNotExistsException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ExternalWorkflowFuture.htm" title="ExternalWorkflowFuture Class" tocid="T_Neon_Temporal_ExternalWorkflowFuture">ExternalWorkflowFuture Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ExternalWorkflowFuture_1.htm" title="ExternalWorkflowFuture(TResult) Class" tocid="T_Neon_Temporal_ExternalWorkflowFuture_1">ExternalWorkflowFuture(TResult) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ExternalWorkflowStub.htm" title="ExternalWorkflowStub Class" tocid="T_Neon_Temporal_ExternalWorkflowStub">ExternalWorkflowStub Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_GoTimeSpanJsonConverter.htm" title="GoTimeSpanJsonConverter Class" tocid="T_Neon_Temporal_GoTimeSpanJsonConverter">GoTimeSpanJsonConverter Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_IActivity.htm" title="IActivity Interface" tocid="T_Neon_Temporal_IActivity">IActivity Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_IDataConverter.htm" title="IDataConverter Interface" tocid="T_Neon_Temporal_IDataConverter">IDataConverter Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_InternalServiceException.htm" title="InternalServiceException Class" tocid="T_Neon_Temporal_InternalServiceException">InternalServiceException Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_IWorkflow.htm" title="IWorkflow Interface" tocid="T_Neon_Temporal_IWorkflow">IWorkflow Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_JsonDataConverter.htm" title="JsonDataConverter Class" tocid="T_Neon_Temporal_JsonDataConverter">JsonDataConverter Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_LimitExceededException.htm" title="LimitExceededException Class" tocid="T_Neon_Temporal_LimitExceededException">LimitExceededException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_LocalActivityFutureStub_2.htm" title="LocalActivityFutureStub(TActivityInterface, TActivityImplementation) Class" tocid="T_Neon_Temporal_LocalActivityFutureStub_2">LocalActivityFutureStub(TActivityInterface, TActivityImplementation) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_LocalActivityOptions.htm" title="LocalActivityOptions Class" tocid="T_Neon_Temporal_LocalActivityOptions">LocalActivityOptions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_NamespaceAlreadyExistsException.htm" title="NamespaceAlreadyExistsException Class" tocid="T_Neon_Temporal_NamespaceAlreadyExistsException">NamespaceAlreadyExistsException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_NamespaceConfiguration.htm" title="NamespaceConfiguration Class" tocid="T_Neon_Temporal_NamespaceConfiguration">NamespaceConfiguration Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_NamespaceDescription.htm" title="NamespaceDescription Class" tocid="T_Neon_Temporal_NamespaceDescription">NamespaceDescription Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_NamespaceInfo.htm" title="NamespaceInfo Class" tocid="T_Neon_Temporal_NamespaceInfo">NamespaceInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_NamespaceListPage.htm" title="NamespaceListPage Class" tocid="T_Neon_Temporal_NamespaceListPage">NamespaceListPage Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_NamespaceNotActiveException.htm" title="NamespaceNotActiveException Class" tocid="T_Neon_Temporal_NamespaceNotActiveException">NamespaceNotActiveException Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_NamespaceStatus.htm" title="NamespaceStatus Enumeration" tocid="T_Neon_Temporal_NamespaceStatus">NamespaceStatus Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_NonDeterministicPolicy.htm" title="NonDeterministicPolicy Enumeration" tocid="T_Neon_Temporal_NonDeterministicPolicy">NonDeterministicPolicy Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_NonRetriableErrors.htm" title="NonRetriableErrors Class" tocid="T_Neon_Temporal_NonRetriableErrors">NonRetriableErrors Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_ParentClosePolicy.htm" title="ParentClosePolicy Enumeration" tocid="T_Neon_Temporal_ParentClosePolicy">ParentClosePolicy Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_PendingActivityInfo.htm" title="PendingActivityInfo Class" tocid="T_Neon_Temporal_PendingActivityInfo">PendingActivityInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_PendingActivityState.htm" title="PendingActivityState Enumeration" tocid="T_Neon_Temporal_PendingActivityState">PendingActivityState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_PendingChildExecutionInfo.htm" title="PendingChildExecutionInfo Class" tocid="T_Neon_Temporal_PendingChildExecutionInfo">PendingChildExecutionInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_PollerInfo.htm" title="PollerInfo Class" tocid="T_Neon_Temporal_PollerInfo">PollerInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_QueryFailedException.htm" title="QueryFailedException Class" tocid="T_Neon_Temporal_QueryFailedException">QueryFailedException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_QueryMethodAttribute.htm" title="QueryMethodAttribute Class" tocid="T_Neon_Temporal_QueryMethodAttribute">QueryMethodAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_RegistrationException.htm" title="RegistrationException Class" tocid="T_Neon_Temporal_RegistrationException">RegistrationException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_RetryOptions.htm" title="RetryOptions Class" tocid="T_Neon_Temporal_RetryOptions">RetryOptions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_RetryTaskException.htm" title="RetryTaskException Class" tocid="T_Neon_Temporal_RetryTaskException">RetryTaskException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_ServiceBusyException.htm" title="ServiceBusyException Class" tocid="T_Neon_Temporal_ServiceBusyException">ServiceBusyException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_SignalMethodAttribute.htm" title="SignalMethodAttribute Class" tocid="T_Neon_Temporal_SignalMethodAttribute">SignalMethodAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_SignalRequest.htm" title="SignalRequest Class" tocid="T_Neon_Temporal_SignalRequest">SignalRequest Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_SignalRequest_1.htm" title="SignalRequest(TResult) Class" tocid="T_Neon_Temporal_SignalRequest_1">SignalRequest(TResult) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_StartToCloseTimeoutException.htm" title="StartToCloseTimeoutException Class" tocid="T_Neon_Temporal_StartToCloseTimeoutException">StartToCloseTimeoutException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_StubCompilerException.htm" title="StubCompilerException Class" tocid="T_Neon_Temporal_StubCompilerException">StubCompilerException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_SyncSignalException.htm" title="SyncSignalException Class" tocid="T_Neon_Temporal_SyncSignalException">SyncSignalException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TaskQueueDescription.htm" title="TaskQueueDescription Class" tocid="T_Neon_Temporal_TaskQueueDescription">TaskQueueDescription Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_TaskQueueKind.htm" title="TaskQueueKind Enumeration" tocid="T_Neon_Temporal_TaskQueueKind">TaskQueueKind Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_TaskQueueType.htm" title="TaskQueueType Enumeration" tocid="T_Neon_Temporal_TaskQueueType">TaskQueueType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalClient.htm" title="TemporalClient Class" tocid="T_Neon_Temporal_TemporalClient">TemporalClient Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalClientClosedArgs.htm" title="TemporalClientClosedArgs Class" tocid="T_Neon_Temporal_TemporalClientClosedArgs">TemporalClientClosedArgs Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_TemporalClosedDelegate.htm" title="TemporalClosedDelegate Delegate" tocid="T_Neon_Temporal_TemporalClosedDelegate">TemporalClosedDelegate Delegate</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalCustomException.htm" title="TemporalCustomException Class" tocid="T_Neon_Temporal_TemporalCustomException">TemporalCustomException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalException.htm" title="TemporalException Class" tocid="T_Neon_Temporal_TemporalException">TemporalException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalGenericException.htm" title="TemporalGenericException Class" tocid="T_Neon_Temporal_TemporalGenericException">TemporalGenericException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalInternalException.htm" title="TemporalInternalException Class" tocid="T_Neon_Temporal_TemporalInternalException">TemporalInternalException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalPanicException.htm" title="TemporalPanicException Class" tocid="T_Neon_Temporal_TemporalPanicException">TemporalPanicException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalSettings.htm" title="TemporalSettings Class" tocid="T_Neon_Temporal_TemporalSettings">TemporalSettings Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TemporalTimeoutException.htm" title="TemporalTimeoutException Class" tocid="T_Neon_Temporal_TemporalTimeoutException">TemporalTimeoutException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_TerminatedException.htm" title="TerminatedException Class" tocid="T_Neon_Temporal_TerminatedException">TerminatedException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_UntypedChildWorkflowFutureStub_1.htm" title="UntypedChildWorkflowFutureStub(TResult) Class" tocid="T_Neon_Temporal_UntypedChildWorkflowFutureStub_1">UntypedChildWorkflowFutureStub(TResult) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_UpdateNamespaceInfo.htm" title="UpdateNamespaceInfo Class" tocid="T_Neon_Temporal_UpdateNamespaceInfo">UpdateNamespaceInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_UpdateNamespaceRequest.htm" title="UpdateNamespaceRequest Class" tocid="T_Neon_Temporal_UpdateNamespaceRequest">UpdateNamespaceRequest Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WaitForSignalReplyException.htm" title="WaitForSignalReplyException Class" tocid="T_Neon_Temporal_WaitForSignalReplyException">WaitForSignalReplyException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_Worker.htm" title="Worker Class" tocid="T_Neon_Temporal_Worker">Worker Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkerArgs.htm" title="WorkerArgs Class" tocid="T_Neon_Temporal_WorkerArgs">WorkerArgs Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkerOptions.htm" title="WorkerOptions Class" tocid="T_Neon_Temporal_WorkerOptions">WorkerOptions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_Workflow.htm" title="Workflow Class" tocid="T_Neon_Temporal_Workflow">Workflow Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowAttribute.htm" title="WorkflowAttribute Class" tocid="T_Neon_Temporal_WorkflowAttribute">WorkflowAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowBase.htm" title="WorkflowBase Class" tocid="T_Neon_Temporal_WorkflowBase">WorkflowBase Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_WorkflowCloseStatus.htm" title="WorkflowCloseStatus Enumeration" tocid="T_Neon_Temporal_WorkflowCloseStatus">WorkflowCloseStatus Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowConfiguration.htm" title="WorkflowConfiguration Class" tocid="T_Neon_Temporal_WorkflowConfiguration">WorkflowConfiguration Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowDescription.htm" title="WorkflowDescription Class" tocid="T_Neon_Temporal_WorkflowDescription">WorkflowDescription Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowExecution.htm" title="WorkflowExecution Class" tocid="T_Neon_Temporal_WorkflowExecution">WorkflowExecution Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowExecutionAlreadyStartedException.htm" title="WorkflowExecutionAlreadyStartedException Class" tocid="T_Neon_Temporal_WorkflowExecutionAlreadyStartedException">WorkflowExecutionAlreadyStartedException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowExecutionInfo.htm" title="WorkflowExecutionInfo Class" tocid="T_Neon_Temporal_WorkflowExecutionInfo">WorkflowExecutionInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowFutureStub_1.htm" title="WorkflowFutureStub(WorkflowInterface) Class" tocid="T_Neon_Temporal_WorkflowFutureStub_1">WorkflowFutureStub(WorkflowInterface) Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_Neon_Temporal_WorkflowIdReusePolicy.htm" title="WorkflowIdReusePolicy Enumeration" tocid="T_Neon_Temporal_WorkflowIdReusePolicy">WorkflowIdReusePolicy Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowInfo.htm" title="WorkflowInfo Class" tocid="T_Neon_Temporal_WorkflowInfo">WorkflowInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowInterfaceAttribute.htm" title="WorkflowInterfaceAttribute Class" tocid="T_Neon_Temporal_WorkflowInterfaceAttribute">WorkflowInterfaceAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowMethodAttribute.htm" title="WorkflowMethodAttribute Class" tocid="T_Neon_Temporal_WorkflowMethodAttribute">WorkflowMethodAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowOptions.htm" title="WorkflowOptions Class" tocid="T_Neon_Temporal_WorkflowOptions">WorkflowOptions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowParallelOperationException.htm" title="WorkflowParallelOperationException Class" tocid="T_Neon_Temporal_WorkflowParallelOperationException">WorkflowParallelOperationException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowQueue_1.htm" title="WorkflowQueue(T) Class" tocid="T_Neon_Temporal_WorkflowQueue_1">WorkflowQueue(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowQueueClosedException.htm" title="WorkflowQueueClosedException Class" tocid="T_Neon_Temporal_WorkflowQueueClosedException">WorkflowQueueClosedException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowRunningException.htm" title="WorkflowRunningException Class" tocid="T_Neon_Temporal_WorkflowRunningException">WorkflowRunningException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowStub.htm" title="WorkflowStub Class" tocid="T_Neon_Temporal_WorkflowStub">WorkflowStub Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Temporal_WorkflowTypeException.htm" title="WorkflowTypeException Class" tocid="T_Neon_Temporal_WorkflowTypeException">WorkflowTypeException Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>Neon.Temporal Namespace</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            This namespace defines the Neon .NET client for the Uber Temporal workflow service.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_AccessDeniedException.htm">AccessDeniedException</a></td><td><div class="summary">
            Thrown when an operation cannot be performed to access limits.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_Activity.htm">Activity</a></td><td><div class="summary">
            Provides useful information and functionality for workflow implementations.
            This will be available via the <a href="P_Neon_Temporal_WorkflowBase_Workflow.htm">Workflow</a> property.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityAttribute.htm">ActivityAttribute</a></td><td><div class="summary">
            Used to tag activity implementations that inherit from
            <a href="T_Neon_Temporal_ActivityBase.htm">ActivityBase</a> to customize the how the activity is
            registered.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityBase.htm">ActivityBase</a></td><td><div class="summary">
            Base class that must be inherited by all implementations.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityFutureStub.htm">ActivityFutureStub</a></td><td><div class="summary">
            Used to execute an untyped activity in parallel with other activities, child
            workflows or other operations.  Instances are created via 
            <a href="M_Neon_Temporal_Workflow_NewActivityFutureStub.htm">NewActivityFutureStub(String, ActivityOptions)</a>.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityFutureStub_1.htm">ActivityFutureStub<span id="LSTE6A2D6DE_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TActivityInterface<span id="LSTE6A2D6DE_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Used to execute a typed activity in parallel with other activities, child
            workflows or other operations.  Instances are created via 
            <a href="M_Neon_Temporal_Workflow_NewActivityFutureStub__1.htm">NewActivityFutureStub<span id="LSTE6A2D6DE_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TActivityInterface<span id="LSTE6A2D6DE_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String, ActivityOptions)</a>.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityHeartbeatTimeoutException.htm">ActivityHeartbeatTimeoutException</a></td><td><div class="summary">
            Thrown when an activity did not send a timely heartbeat to Temporal.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityInterfaceAttribute.htm">ActivityInterfaceAttribute</a></td><td><div class="summary">
            Used to tag activity interfaces and optionally specify the task queue
            identifying the workers hosting this activity.  <a href="T_Neon_Temporal_TemporalClient.htm">TemporalClient</a>
            for more information on how task lists work.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityMethodAttribute.htm">ActivityMethodAttribute</a></td><td><div class="summary">
            Used to customize activity interface method options.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityOptions.htm">ActivityOptions</a></td><td><div class="summary">
            Specifies the options used for executing an activity.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityStub.htm">ActivityStub</a></td><td><div class="summary">
            Used to execute an untyped activity whose .NET type information is not known
            at runtime or an activity written in different languages.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityTask.htm">ActivityTask</a></td><td><div class="summary">
            Holds information about an executing activity.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ActivityTypeException.htm">ActivityTypeException</a></td><td><div class="summary">
            Thrown when ak activity interface or implementation is not valid.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_BadRequestException.htm">BadRequestException</a></td><td><div class="summary">
            Thrown when a Temporal receives an invalid request.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_CancellationAlreadyRequestedException.htm">CancellationAlreadyRequestedException</a></td><td><div class="summary">
            Thrown when attempting to cancel an operation that has already been cancelled.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_CancelledException.htm">CancelledException</a></td><td><div class="summary">
            Thrown when a Temporal operation is cancelled.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ChildWorkflowFuture.htm">ChildWorkflowFuture</a></td><td><div class="summary">
            Implements a child workflow future that returns <span class="code">void</span>.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ChildWorkflowFuture_1.htm">ChildWorkflowFuture<span id="LSTE6A2D6DE_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LSTE6A2D6DE_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Implements a child workflow future that returns a value.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ChildWorkflowFutureStub.htm">ChildWorkflowFutureStub</a></td><td><div class="summary"><p>
            Manages starting and signalling a child workflow instance based on
            its workflow type name and arguments.  This is useful when you need
            to perform other operations in parallel with a child by separating
            workflow execution and retrieving the result into separate operations.
            </p><p>
            Use this version for workflows that don't return a result.
            </p></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ChildWorkflowOptions.htm">ChildWorkflowOptions</a></td><td><div class="summary">
            Specifies the options to use when executing a child workflow.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ChildWorkflowStub_1.htm">ChildWorkflowStub<span id="LSTE6A2D6DE_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TWorkflowInterface<span id="LSTE6A2D6DE_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Used to execute a child workflow in parallel with other child workflows or activities.
            Instances are created via <a href="M_Neon_Temporal_Workflow_NewChildWorkflowFutureStub__1.htm">NewChildWorkflowFutureStub<span id="LSTE6A2D6DE_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TWorkflowInterface<span id="LSTE6A2D6DE_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String, ChildWorkflowOptions)</a>.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ClientVersionNotSupportedException.htm">ClientVersionNotSupportedException</a></td><td><div class="summary">
            Thrown when the underlying GOLANG client version is not supported by the Temporal cluster.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ConnectException.htm">ConnectException</a></td><td><div class="summary">
            Thrown when a Temporal connection could not be established.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ContinueAsNewException.htm">ContinueAsNewException</a></td><td><div class="summary"><b>INTERNAL USE ONLY:</b> Thrown by <a href="M_Neon_Temporal_Workflow_ContinueAsNewAsync.htm">ContinueAsNewAsync(ContinueAsNewOptions, <span id="LSTE6A2D6DE_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_10?cpp=array&lt;");</script>Object<span id="LSTE6A2D6DE_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_11?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>
            or <a href="M_Neon_Temporal_Workflow_ContinueAsNewAsync_1.htm">ContinueAsNewAsync(<span id="LSTE6A2D6DE_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_12?cpp=array&lt;");</script>Object<span id="LSTE6A2D6DE_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a> as well as any continue-as-new stubs to be handled 
            internally by <a href="T_Neon_Temporal_WorkflowBase.htm">WorkflowBase</a>.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ContinueAsNewOptions.htm">ContinueAsNewOptions</a></td><td><div class="summary">
            Specifies the options to be used when continuing a workflow as a 
            new instance.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_EntityNotExistsException.htm">EntityNotExistsException</a></td><td><div class="summary">
            Thrown when a Temporal request references an entity that doesn't exist.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ExternalWorkflowFuture.htm">ExternalWorkflowFuture</a></td><td><div class="summary">
            Implements an external workflow future that returns <span class="code">void</span>.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ExternalWorkflowFuture_1.htm">ExternalWorkflowFuture<span id="LSTE6A2D6DE_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_14?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LSTE6A2D6DE_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_15?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Implements an external workflow future that returns a value.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ExternalWorkflowStub.htm">ExternalWorkflowStub</a></td><td><div class="summary">
            Supports signalling and cancelling any workflow.  This is useful when an
            external workflow interface type is not known at compile time or to manage 
            workflows written in another language.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_GoTimeSpanJsonConverter.htm">GoTimeSpanJsonConverter</a></td><td><div class="summary"><p>
            Implements a type converter for <a href="https://docs.microsoft.com/dotnet/api/system.timespan" target="_blank">TimeSpan</a> using the culture
            Go Language formatted time.  This serializes <a href="https://docs.microsoft.com/dotnet/api/system.timespan" target="_blank">TimeSpan</a> instances
            in nanoseconds as a long.  The maximum <a href="https://docs.microsoft.com/dotnet/api/system.timespan" target="_blank">TimeSpan</a> that this converter
            can accurately handle is about 290 year.  Any amount of time larger than 290 years
            is not suitable for this serializer.
            </p></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_InternalServiceException.htm">InternalServiceException</a></td><td><div class="summary">
            Thrown when a Temporal experienced an internal error.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_JsonDataConverter.htm">JsonDataConverter</a></td><td><div class="summary"><p>
            Implements <a href="T_Neon_Temporal_IDataConverter.htm">IDataConverter</a> by serializing data to/from
            UTF-8 encoded JSON text.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            This converter uses the Newtonsoft <a href="https://www.newtonsoft.com/json">JSON.NET</a>
            package so you can decorate your data types with attributes such as <span class="code">[JsonProperty]</span>,
            <span class="code">[JsonIgnore]</span>,... to control how your data is serialized.
            </td></tr></table></div><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            This implementation also supports values that implement <a href="T_Neon_Data_IRoundtripData.htm">IRoundtripData</a> to make
            it easier to manage data schema changes. 
            </td></tr></table></div></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_LimitExceededException.htm">LimitExceededException</a></td><td><div class="summary">
            Thrown when a Temporal workflow query failed.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_LocalActivityFutureStub_2.htm">LocalActivityFutureStub<span id="LSTE6A2D6DE_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_16?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TActivityInterface, TActivityImplementation<span id="LSTE6A2D6DE_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_17?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Used to execute a local activity in parallel with other activities or child workflows.
            Instances are created via <a href="M_Neon_Temporal_Workflow_NewLocalActivityStub__2.htm">NewLocalActivityStub<span id="LSTE6A2D6DE_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TActivityInterface, TActivityImplementation<span id="LSTE6A2D6DE_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(LocalActivityOptions)</a>.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_LocalActivityOptions.htm">LocalActivityOptions</a></td><td><div class="summary">
            Specifies options used when running a local workflow activity.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_NamespaceAlreadyExistsException.htm">NamespaceAlreadyExistsException</a></td><td><div class="summary">
            Thrown when a Temporal namespace already exists.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_NamespaceConfiguration.htm">NamespaceConfiguration</a></td><td><div class="summary">
            Namespace configuration options.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_NamespaceDescription.htm">NamespaceDescription</a></td><td><div class="summary">
            Information returned by <a href="M_Neon_Temporal_TemporalClient_DescribeNamespaceAsync.htm">DescribeNamespaceAsync(String)</a>.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_NamespaceInfo.htm">NamespaceInfo</a></td><td><div class="summary">
            Information about a Temporal namespace.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_NamespaceListPage.htm">NamespaceListPage</a></td><td><div class="summary">
            Holds a page of namespace information listed from Temporal.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_NamespaceNotActiveException.htm">NamespaceNotActiveException</a></td><td><div class="summary">
            Thrown when a Temporal namespace has been deprecated.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_NonRetriableErrors.htm">NonRetriableErrors</a></td><td><div class="summary">
            Used in conjunction with <a href="T_Neon_Temporal_RetryOptions.htm">RetryOptions</a> to specify errors that
            <b>will not</b> cause a workflow related operation to be retried.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_PendingActivityInfo.htm">PendingActivityInfo</a></td><td><div class="summary">
            Describes the current state of a scheduled or executing activity.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_PendingChildExecutionInfo.htm">PendingChildExecutionInfo</a></td><td><div class="summary">
            Decribes the current state of a pending; child workflow.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_PollerInfo.htm">PollerInfo</a></td><td><div class="summary">
            Describes the status of a poller (AKA worker) listening to a task queue.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_QueryFailedException.htm">QueryFailedException</a></td><td><div class="summary">
            Thrown when a Temporal workflow query failed.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_QueryMethodAttribute.htm">QueryMethodAttribute</a></td><td><div class="summary">
            Used to identify a workflow interface method as a query.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_RegistrationException.htm">RegistrationException</a></td><td><div class="summary">
            Thrown for workflow and activity registration problems.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_RetryOptions.htm">RetryOptions</a></td><td><div class="summary">
            Describes a Temporal retry policy.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_RetryTaskException.htm">RetryTaskException</a></td><td><div class="summary">
            Thrown when a workflow task could not be retried.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_ServiceBusyException.htm">ServiceBusyException</a></td><td><div class="summary">
            Thrown when the Temporal cluster is too busy to perform an operation.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_SignalMethodAttribute.htm">SignalMethodAttribute</a></td><td><div class="summary">
            Used to identify a workflow interface methods as a signal.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_SignalRequest.htm">SignalRequest</a></td><td><div class="summary"><p><b>EXPERIMENTAL:</b> Used to relay a received synchronous signal's 
            arguments to the workflow logic via a <a href="T_Neon_Temporal_WorkflowQueue_1.htm">WorkflowQueue<span id="LSTE6A2D6DE_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_20?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE6A2D6DE_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_21?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> allowing
            the workflow handle the signal by executing activities, child workflows, etc.
            This class also provides a way for the workflow to specify the signal reply. 
            </p><p>
            This non-generic version of the class is intended for signals that return <span class="code">void</span>.
            Use <a href="T_Neon_Temporal_SignalRequest_1.htm">SignalRequest<span id="LSTE6A2D6DE_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_22?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LSTE6A2D6DE_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_23?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> for signals that return a result.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            This synchronous signals are considered experimental which means that this feature will 
            probably have a limited lifespan.  Temporal will introduce new <b>update</b>
            semantics at some point that will ultimately obsolete synchronous signals.
            </td></tr></table></div></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_SignalRequest_1.htm">SignalRequest<span id="LSTE6A2D6DE_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_24?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LSTE6A2D6DE_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_25?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary"><p><b>EXPERIMENTAL:</b> Used to relay a received synchronous signal's 
            arguments to the workflow logic via a <a href="T_Neon_Temporal_WorkflowQueue_1.htm">WorkflowQueue<span id="LSTE6A2D6DE_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_26?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE6A2D6DE_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_27?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> allowing
            the workflow handle the signal by executing activities, child workflows, etc.
            This class also provides a way for the workflow to specify the signal reply. 
            </p><p>
            This generic version of the class is intended for signals that return results.
            Use <a href="T_Neon_Temporal_SignalRequest.htm">SignalRequest</a> for signals that return <span class="code">void</span>.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            This synchronous signals are considered experimental which means that this feature will 
            probably have a limited lifespan.  Temporal will introduce new <b>update</b>
            semantics at some point that will ultimately obsolete synchronous signals.
            </td></tr></table></div></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_StartToCloseTimeoutException.htm">StartToCloseTimeoutException</a></td><td><div class="summary">
            Thrown when a workflow or activity did not complete within the required time.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_StubCompilerException.htm">StubCompilerException</a></td><td><div class="summary">
            Thrown when there's a problem compiling a workflow or activity stub.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_SyncSignalException.htm">SyncSignalException</a></td><td><div class="summary">
            Thrown when a synchronous signal sent to a workflow fails.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TaskQueueDescription.htm">TaskQueueDescription</a></td><td><div class="summary">
            Describes the current status of a Temporal task queue.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalClient.htm">TemporalClient</a></td><td><div class="summary">
            Implements a client that will be connected to a Temporal cluster and be used
            to create and manage workflows.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalClientClosedArgs.htm">TemporalClientClosedArgs</a></td><td><div class="summary">
            The event arguments sent when a <a href="T_Neon_Temporal_TemporalClient.htm">TemporalClient</a> is closed
            with a property indicating whether or not the connection was closed due
            to an error.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalCustomException.htm">TemporalCustomException</a></td><td><div class="summary">
            Thrown when a Temporal <b>custom</b> error is encountered.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalException.htm">TemporalException</a></td><td><div class="summary">
            Base class for all Temporal related exceptions.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalGenericException.htm">TemporalGenericException</a></td><td><div class="summary">
            Thrown when a Temporal <b>generic</b> error is encountered.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalInternalException.htm">TemporalInternalException</a></td><td><div class="summary">
            Base class for Temporal exceptions that must not be caught and handled
            by workflow entry point methods.  The Temporal client must be allowed
            to handle these.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalPanicException.htm">TemporalPanicException</a></td><td><div class="summary">
            Thrown when a Temporal <b>panic</b> error is encountered.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalSettings.htm">TemporalSettings</a></td><td><div class="summary"><p>
            Temporal client settings.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            Temporal settings properties are considered to be <b>read/write</b> until they
            are used for connecting a <a href="T_Neon_Temporal_TemporalClient.htm">TemporalClient</a>.  After that time,
            these properties are considered <b>read-only</b> and an <a href="https://docs.microsoft.com/dotnet/api/system.invalidoperationexception" target="_blank">InvalidOperationException</a>
            will be thrown when you try to set a property value.
            </td></tr></table></div></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TemporalTimeoutException.htm">TemporalTimeoutException</a></td><td><div class="summary">
            Indicates that a Temporal operation timed out.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_TerminatedException.htm">TerminatedException</a></td><td><div class="summary">
            Thrown when a Temporal <b>terminated</b> error is encountered.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_UntypedChildWorkflowFutureStub_1.htm">UntypedChildWorkflowFutureStub<span id="LSTE6A2D6DE_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_28?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LSTE6A2D6DE_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_29?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary"><p>
            Manages starting and signalling a child workflow instance based on
            its workflow type name and arguments.  This is useful when you need
            to perform other operations in parallel with a child.
            </p><p>
            Use this version for workflows that return a result.
            </p></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_UpdateNamespaceInfo.htm">UpdateNamespaceInfo</a></td><td><div class="summary">
            Holds the changes to be made to a Temporal namespace's basic properties.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_UpdateNamespaceRequest.htm">UpdateNamespaceRequest</a></td><td><div class="summary">
            Holds the changes to be made to a Temporal namespace.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WaitForSignalReplyException.htm">WaitForSignalReplyException</a></td><td><div class="summary"><p><b>EXPERIMENTAL:</b> Thrown by workflow synchronous signal methods when the
            signal has been marshalled to the workflow method via a <a href="T_Neon_Temporal_WorkflowQueue_1.htm">WorkflowQueue<span id="LSTE6A2D6DE_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_30?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE6A2D6DE_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_31?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
            and the workflow method will handle the signal reply.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            Synchronous signals are an experimental feature that will likely be replaced
            in the coming months by a new Temporal feature.
            </td></tr></table></div></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_Worker.htm">Worker</a></td><td><div class="summary">
            Manages a Temporal activity/workflow worker.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkerArgs.htm">WorkerArgs</a></td><td><div class="summary">
            Holds the opaque arguments passed to <a href="T_Neon_Temporal_WorkflowBase.htm">WorkflowBase</a> and <a href="T_Neon_Temporal_ActivityBase.htm">ActivityBase</a>
            implementations by the <a href="T_Neon_Temporal_TemporalClient.htm">TemporalClient</a> when the workflow or activity is 
            executed on a worker.  This must be passed to the base <a href="T_Neon_Temporal_WorkflowBase.htm">WorkflowBase</a> or
            <a href="T_Neon_Temporal_ActivityBase.htm">ActivityBase</a> class constructors.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkerOptions.htm">WorkerOptions</a></td><td><div class="summary">
            Specifies the options Temporal will use when assigning workflow and activity
            executions to a user worker service.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_Workflow.htm">Workflow</a></td><td><div class="summary">
            Provides useful information and functionality for workflow implementations.
            This will be available via the <a href="P_Neon_Temporal_WorkflowBase_Workflow.htm">Workflow</a> property.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowAttribute.htm">WorkflowAttribute</a></td><td><div class="summary">
            Used to tag workflow implementations that inherit from
            <a href="T_Neon_Temporal_WorkflowBase.htm">WorkflowBase</a> to customize the how the workflow is
            registered.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowBase.htm">WorkflowBase</a></td><td><div class="summary">
            Base class that must be inherited for all workflow implementations.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowConfiguration.htm">WorkflowConfiguration</a></td><td><div class="summary">
            Describes a workflow's configuration.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowDescription.htm">WorkflowDescription</a></td><td><div class="summary">
            Describes a workflow execution.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowExecution.htm">WorkflowExecution</a></td><td><div class="summary">
            Describes the state of an executed workflow.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowExecutionAlreadyStartedException.htm">WorkflowExecutionAlreadyStartedException</a></td><td><div class="summary">
            Thrown when attempting to cancel an operation that has already been cancelled.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowExecutionInfo.htm">WorkflowExecutionInfo</a></td><td><div class="summary">
            Describes the current state of a workflow.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowFutureStub_1.htm">WorkflowFutureStub<span id="LSTE6A2D6DE_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_32?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>WorkflowInterface<span id="LSTE6A2D6DE_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_33?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary"><p>
            Manages starting, signalling, or querying an external workflow instance
            based on its workflow type name and arguments.  This class separates workflow 
            execution and retrieving the result into separate operations.
            </p><p>
            Use this version for workflows that don't return a result.
            </p></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowInfo.htm">WorkflowInfo</a></td><td><div class="summary">
            Returns information about an executing workflow.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowInterfaceAttribute.htm">WorkflowInterfaceAttribute</a></td><td><div class="summary">
            Used to tag workflow interfaces and optionally specify the task queue
            identifying the workers hosting this workflow.  <a href="T_Neon_Temporal_TemporalClient.htm">TemporalClient</a>
            for more information on how task lists work.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowMethodAttribute.htm">WorkflowMethodAttribute</a></td><td><div class="summary">
            Used to identify a workflow interface method as a workflow entry point.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowOptions.htm">WorkflowOptions</a></td><td><div class="summary">
            Specifies the options to use when starting a workflow.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowParallelOperationException.htm">WorkflowParallelOperationException</a></td><td><div class="summary">
            Thrown when an operation is requested on an executing workflow while 
            another operation is already pending.  Workflows cannot have multiple
            operations running in parallel because this will likely break 
            workflow determinism.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowQueue_1.htm">WorkflowQueue<span id="LSTE6A2D6DE_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_34?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE6A2D6DE_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE6A2D6DE_35?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Implements a workflow-safe first-in-first-out (FIFO) queue that can be used by
            workflow signal methods to communicate with the running workflow logic.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowQueueClosedException.htm">WorkflowQueueClosedException</a></td><td><div class="summary">
            Indicates that a Temporal <a href="M_Neon_Temporal_WorkflowQueue_1_DequeueAsync.htm">DequeueAsync(TimeSpan)</a> operation
            failed because the queue has been closed.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowRunningException.htm">WorkflowRunningException</a></td><td><div class="summary">
            Thrown when a workflow cannot be started because another workflow with
            the same ID is already running.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowStub.htm">WorkflowStub</a></td><td><div class="summary">
            Implements an untyped client side stub to a single external workflow instance.  This can 
            be used to invoke, signal, query, and cancel a workflow when the actual workflow 
            interface isn't available.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Temporal_WorkflowTypeException.htm">WorkflowTypeException</a></td><td><div class="summary">
            Thrown when ak workflow interface or implementation is not valid.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Interfaces</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="interfaceList"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Neon_Temporal_IActivity.htm">IActivity</a></td><td><div class="summary">
            All activity interfaces must derive from this interface.
            </div></td></tr><tr data="interface; public"><td><img src="icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Neon_Temporal_IDataConverter.htm">IDataConverter</a></td><td><div class="summary">
            Used by <a href="T_Neon_Temporal_Worker.htm">Worker</a> instances to manage serialization of method parameters and results
            for workflow and activity methods to/from byte arrays for persistence in the Temporal cluster
            database.
            </div></td></tr><tr data="interface; public"><td><img src="icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Neon_Temporal_IWorkflow.htm">IWorkflow</a></td><td><div class="summary">
            All workflow interfaces must derive from this interface.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Delegates</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="delegateList"><tr><th class="iconColumn">
					 
				</th><th>Delegate</th><th>Description</th></tr><tr data="delegate; public"><td><img src="icons/pubdelegate.gif" alt="Public delegate" title="Public delegate" /></td><td><a href="T_Neon_Temporal_TemporalClosedDelegate.htm">TemporalClosedDelegate</a></td><td><div class="summary">
            Delegate called by a <a href="T_Neon_Temporal_TemporalClient.htm">TemporalClient</a> when the connection is closed
            explicitly or where there's a problem communicating with the <b>temporal-proxy</b>.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Enumerations</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="enumerationList"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_ArchivalStatus.htm">ArchivalStatus</a></td><td><div class="summary">
            Controls archival.
            </div></td></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_NamespaceStatus.htm">NamespaceStatus</a></td><td><div class="summary">
            Indicates a Temporal namespace status.
            </div></td></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_NonDeterministicPolicy.htm">NonDeterministicPolicy</a></td><td><div class="summary">
            Enumerates how a decision task handler deals with mismatched history events 
            (presumably arising from non-deterministic workflow definitions). 
            </div></td></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_ParentClosePolicy.htm">ParentClosePolicy</a></td><td><div class="summary">
            Enumerates the possible child workflow behaviors when the parent
            workflow is closed.
            </div></td></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_PendingActivityState.htm">PendingActivityState</a></td><td><div class="summary">
            Enumerates the state of an activity.
            </div></td></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_TaskQueueKind.htm">TaskQueueKind</a></td><td><div class="summary">
            Enumerates the different kinds of task lists.
            </div></td></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_TaskQueueType.htm">TaskQueueType</a></td><td><div class="summary">
            Used to distinguish between decision (AKA workflow) and activity task lists.
            </div></td></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_WorkflowCloseStatus.htm">WorkflowCloseStatus</a></td><td><div class="summary">
            Enumerates the possible reasons why a workflow was closed.
            </div></td></tr><tr data="enumeration; public"><td><img src="icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Neon_Temporal_WorkflowIdReusePolicy.htm">WorkflowIdReusePolicy</a></td><td><div class="summary">
            Enumerates the workflow ID reuse policies.
            </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p> </div></body></html>