<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>CouchbaseFixture.Start Method (CouchbaseSettings, String, String, String[], String, String, Boolean, String, ContainerLimits)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Neon.Xunit.Couchbase.CouchbaseFixture.Start(Neon.Data.CouchbaseSettings,System.String,System.String,System.String[],System.String,System.String,System.Boolean,System.String,Neon.Xunit.ContainerLimits)" /><meta name="Description" content="Starts a Couchbase container if it's not already running. You'll generally want to call this in your test class constructor instead of . You'll need to call instead when this fixture is being added to a ." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Xunit.Couchbase" /><meta name="file" content="M_Neon_Xunit_Couchbase_CouchbaseFixture_Start" /><meta name="guid" content="M_Neon_Xunit_Couchbase_CouchbaseFixture_Start" /><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Xunit_Couchbase.htm" title="Neon.Xunit.Couchbase" tocid="N_Neon_Xunit_Couchbase">Neon.Xunit.Couchbase</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Xunit_Couchbase_CouchbaseFixture.htm" title="CouchbaseFixture Class" tocid="T_Neon_Xunit_Couchbase_CouchbaseFixture">CouchbaseFixture Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Neon_Xunit_Couchbase_CouchbaseFixture.htm" title="CouchbaseFixture Methods" tocid="Methods_T_Neon_Xunit_Couchbase_CouchbaseFixture">CouchbaseFixture Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Xunit_Couchbase_CouchbaseFixture_Start.htm" title="Start Method " tocid="Overload_Neon_Xunit_Couchbase_CouchbaseFixture_Start">Start Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Neon_Xunit_Couchbase_CouchbaseFixture_Start.htm" title="Start Method (CouchbaseSettings, String, String, String[], String, String, Boolean, String, ContainerLimits)" tocid="M_Neon_Xunit_Couchbase_CouchbaseFixture_Start">Start Method (CouchbaseSettings, String, String, String[], String, String, Boolean, String, ContainerLimits)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>CouchbaseFixture<span id="LSTA304750B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_0?cpp=::|nu=.");</script>Start Method (CouchbaseSettings, String, String, <span id="LSTA304750B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_1?cpp=array&lt;");</script>String<span id="LSTA304750B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_2?cpp=&gt;|vb=()|nu=[]");</script>, String, String, Boolean, String, ContainerLimits)</h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p>
            Starts a Couchbase container if it's not already running.  You'll generally want
            to call this in your test class constructor instead of <a href="M_Neon_Xunit_ITestFixture_Start.htm">Start(Action)</a>.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            You'll need to call <a href="M_Neon_Xunit_Couchbase_CouchbaseFixture_StartAsComposed.htm">StartAsComposed(CouchbaseSettings, String, String, <span id="LSTA304750B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_3?cpp=array&lt;");</script>String<span id="LSTA304750B_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_4?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, String, String, Boolean, String, ContainerLimits)</a>
            instead when this fixture is being added to a <a href="T_Neon_Xunit_ComposedFixture.htm">ComposedFixture</a>.
            </td></tr></table></div></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Xunit_Couchbase.htm">Neon.Xunit.Couchbase</a><br />
    <strong>Assembly:</strong>
   Neon.Xunit.Couchbase (in Neon.Xunit.Couchbase.dll) Version: 2.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">TestFixtureStatus</span> <span class="identifier">Start</span>(
	<span class="identifier">CouchbaseSettings</span> <span class="parameter">settings</span> = <span class="keyword">null</span>,
	<span class="identifier">string</span> <span class="parameter">image</span> = <span class="keyword">null</span>,
	<span class="identifier">string</span> <span class="parameter">name</span> = "cb-test",
	<span class="identifier">string</span>[] <span class="parameter">env</span> = <span class="keyword">null</span>,
	<span class="identifier">string</span> <span class="parameter">username</span> = "Administrator",
	<span class="identifier">string</span> <span class="parameter">password</span> = "password",
	<span class="identifier">bool</span> <span class="parameter">noPrimary</span> = <span class="keyword">false</span>,
	<span class="identifier">string</span> <span class="parameter">hostInterface</span> = <span class="keyword">null</span>,
	<span class="identifier">ContainerLimits</span> <span class="parameter">limits</span> = <span class="keyword">null</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Start</span> ( 
	Optional <span class="parameter">settings</span> <span class="keyword">As</span> <span class="identifier">CouchbaseSettings</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">image</span> <span class="keyword">As</span> <span class="identifier">String</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">name</span> <span class="keyword">As</span> <span class="identifier">String</span> = "cb-test",
	Optional <span class="parameter">env</span> <span class="keyword">As</span> <span class="identifier">String</span>() = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">username</span> <span class="keyword">As</span> <span class="identifier">String</span> = "Administrator",
	Optional <span class="parameter">password</span> <span class="keyword">As</span> <span class="identifier">String</span> = "password",
	Optional <span class="parameter">noPrimary</span> <span class="keyword">As</span> <span class="identifier">Boolean</span> = <span class="keyword">false</span>,
	Optional <span class="parameter">hostInterface</span> <span class="keyword">As</span> <span class="identifier">String</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">limits</span> <span class="keyword">As</span> <span class="identifier">ContainerLimits</span> = <span class="keyword">Nothing</span>
) <span class="keyword">As</span> <span class="identifier">TestFixtureStatus</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">TestFixtureStatus</span> <span class="identifier">Start</span>(
	<span class="identifier">CouchbaseSettings</span>^ <span class="parameter">settings</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">String</span>^ <span class="parameter">image</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">String</span>^ <span class="parameter">name</span> = L"cb-test", 
	<span class="keyword">array</span>&lt;<span class="identifier">String</span>^&gt;^ <span class="parameter">env</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">String</span>^ <span class="parameter">username</span> = L"Administrator", 
	<span class="identifier">String</span>^ <span class="parameter">password</span> = L"password", 
	<span class="identifier">bool</span> <span class="parameter">noPrimary</span> = <span class="keyword">false</span>, 
	<span class="identifier">String</span>^ <span class="parameter">hostInterface</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">ContainerLimits</span>^ <span class="parameter">limits</span> = <span class="keyword">nullptr</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">Start</span> : 
        ?<span class="parameter">settings</span> : <span class="identifier">CouchbaseSettings</span> * 
        ?<span class="parameter">image</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">name</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">env</span> : <span class="identifier">string</span>[] * 
        ?<span class="parameter">username</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">password</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">noPrimary</span> : <span class="identifier">bool</span> * 
        ?<span class="parameter">hostInterface</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">limits</span> : <span class="identifier">ContainerLimits</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">settings</span> = defaultArg <span class="identifier">settings</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">image</span> = defaultArg <span class="identifier">image</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">name</span> = defaultArg <span class="identifier">name</span> "cb-test"
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">env</span> = defaultArg <span class="identifier">env</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">username</span> = defaultArg <span class="identifier">username</span> "Administrator"
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">password</span> = defaultArg <span class="identifier">password</span> "password"
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">noPrimary</span> = defaultArg <span class="identifier">noPrimary</span> <span class="keyword">false</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">hostInterface</span> = defaultArg <span class="identifier">hostInterface</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">limits</span> = defaultArg <span class="identifier">limits</span> <span class="keyword">null</span>
*)
<span class="keyword">-&gt;</span> <span class="identifier">TestFixtureStatus</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">settings</span> (Optional)</dt><dd>Type: <a href="T_Neon_Data_CouchbaseSettings.htm">Neon.Data<span id="LSTA304750B_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CouchbaseSettings</a><br />Optional Couchbase settings.</dd><dt><span class="parameter">image</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTA304750B_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />
            Optionally specifies the Couchbase container image.  This defaults to 
            <b>nkubeio/couchbase-dev:latest</b> or <b>nkubedev/couchbase-dev:latest</b>
            depending on whether the assembly was built from a git release branch or not.
            </dd><dt><span class="parameter">name</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTA304750B_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />Optionally specifies the Couchbase container name (defaults to <span class="code">cb-test</span>).</dd><dt><span class="parameter">env</span> (Optional)</dt><dd>Type: <span id="LSTA304750B_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_8?cpp=array&lt;");</script><a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTA304750B_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><span id="LSTA304750B_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_10?cpp=&gt;|vb=()|nu=[]");</script><br />Optional environment variables to be passed to the Couchbase container, formatted as <b>NAME=VALUE</b> or just <b>NAME</b>.</dd><dt><span class="parameter">username</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTA304750B_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />Optional Couchbase username (defaults to <b>Administrator</b>).</dd><dt><span class="parameter">password</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTA304750B_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_12?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />Optional Couchbase password (defaults to <b>password</b>).</dd><dt><span class="parameter">noPrimary</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LSTA304750B_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_13?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />Optionally disable creation of the primary bucket index.</dd><dt><span class="parameter">hostInterface</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTA304750B_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_14?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />
            Optionally specifies the host interface where the container public ports will be
            published.  This defaults to <a href="P_Neon_Xunit_ContainerFixture_DefaultHostInterface.htm">DefaultHostInterface</a>
            but may be customized.  This needs to be an IPv4 address.
            </dd><dt><span class="parameter">limits</span> (Optional)</dt><dd>Type: <a href="T_Neon_Xunit_ContainerLimits.htm">Neon.Xunit<span id="LSTA304750B_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_15?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ContainerLimits</a><br />
            Optionally specifies the Docker container limits to use for hosting Couchbase.  Note that
            this method will use reasonable default limits when this is <span class="code">null</span>.
            </dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Neon_Xunit_TestFixtureStatus.htm">TestFixtureStatus</a><br /><a href="T_Neon_Xunit_TestFixtureStatus.htm">Started</a> if the fixture wasn't previously started and
            this method call started it or <a href="T_Neon_Xunit_TestFixtureStatus.htm">AlreadyRunning</a> if the 
            fixture was already running.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            Some of the <span class="parameter">settings</span> properties will be ignored including 
            <a href="P_Neon_Data_CouchbaseSettings_Servers.htm">Servers</a>.  This will be replaced by the local
            endpoint for the Couchbase container.  Also, the fixture will connect to the 
            <b>test</b> bucket by default (unless another is specified).
            </td></tr></table></div><p>
            This method creates a primary index by default because it's very common for 
            unit tests to require a primary index. You can avoid creating a primary index 
            by passing <span class="parameter">noPrimary</span><span class="code">=true</span>.
            </p><p>
            There are three basic patterns for using this fixture.
            </p><div class="tableSection"><table><tr><td><b>initialize once</b></td><td><p>
            The basic idea here is to have your test class initialize Couchbase
            once within the test class constructor inside of the initialize action
            with common state that all of the tests can access.
            </p><p>
            This will be quite a bit faster than reconfiguring Couchbase at the
            beginning of every test and can work well for many situations.
            </p></td></tr><tr><td><b>initialize every test</b></td><td>
            For scenarios where Couchbase must be cleared before every test,
            you can use the <a href="M_Neon_Xunit_Couchbase_CouchbaseFixture_Clear.htm">Clear<span id="LSTA304750B_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA304750B_16?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> method to reset its
            state within each test method, populate the database as necessary,
            and then perform your tests.
            </td></tr><tr><td><b>docker integrated</b></td><td>
            The <a href="T_Neon_Xunit_Couchbase_CouchbaseFixture.htm">CouchbaseFixture</a> can also be added to the <a href="T_Neon_Xunit_DockerFixture.htm">DockerFixture</a>
            and used within a swarm.  This is useful for testing multiple services and
            also has the advantage of ensure that swarm/node state is fully reset
            before the database container is started.
            </td></tr></table></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Neon_Xunit_Couchbase_CouchbaseFixture.htm">CouchbaseFixture Class</a></div><div class="seeAlsoStyle"><a href="Overload_Neon_Xunit_Couchbase_CouchbaseFixture_Start.htm">Start Overload</a></div><div class="seeAlsoStyle"><a href="N_Neon_Xunit_Couchbase.htm">Neon.Xunit.Couchbase Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p> </div></body></html>