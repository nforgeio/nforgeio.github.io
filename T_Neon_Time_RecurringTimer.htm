<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>RecurringTimer Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="RecurringTimer class" /><meta name="System.Keywords" content="Neon.Time.RecurringTimer class" /><meta name="Microsoft.Help.F1" content="Neon.Time.RecurringTimer" /><meta name="Microsoft.Help.Id" content="T:Neon.Time.RecurringTimer" /><meta name="Description" content="Used to manage tasks that need to be performed on a periodic basis." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Time" /><meta name="file" content="T_Neon_Time_RecurringTimer" /><meta name="guid" content="T_Neon_Time_RecurringTimer" /><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Time.htm" title="Neon.Time" tocid="N_Neon_Time">Neon.Time</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Time_RecurringTimer.htm" title="RecurringTimer Class" tocid="T_Neon_Time_RecurringTimer">RecurringTimer Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Neon_Time_RecurringTimer__ctor.htm" title="RecurringTimer Constructor " tocid="Overload_Neon_Time_RecurringTimer__ctor">RecurringTimer Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Neon_Time_RecurringTimer.htm" title="RecurringTimer Properties" tocid="Properties_T_Neon_Time_RecurringTimer">RecurringTimer Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Neon_Time_RecurringTimer.htm" title="RecurringTimer Methods" tocid="Methods_T_Neon_Time_RecurringTimer">RecurringTimer Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>RecurringTimer Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Used to manage tasks that need to be performed on a periodic basis.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LST5B55DCE7_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Neon.Time<span id="LST5B55DCE7_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>RecurringTimer</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Time.htm">Neon.Time</a><br />
    <strong>Assembly:</strong>
   Neon.Common (in Neon.Common.dll) Version: 1.0.1<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">RecurringTimer</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">RecurringTimer</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">RecurringTimer</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">RecurringTimer</span> =  <span class="keyword">class</span> <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">RecurringTimer</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer__ctor.htm">RecurringTimer<span id="LST5B55DCE7_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Default constructor that creates a <a href="T_Neon_Time_RecurringTimerType.htm">Disabled</a> timer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer__ctor_3.htm">RecurringTimer(String)</a></td><td><div class="summary">
            Constructs a timer by parsing a string value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer__ctor_2.htm">RecurringTimer(TimeOfDay)</a></td><td><div class="summary">
            Constructs a recurring timer that will fire once a day at the specified time offset.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer__ctor_1.htm">RecurringTimer(RecurringTimerType, TimeSpan)</a></td><td><div class="summary">
            Constructs a recurring timer of the specified type and time offset from
            the beginning of the implied period.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_Neon_Time_RecurringTimer_Disabled.htm">Disabled</a></td><td><div class="summary">
            Returns a disabled timer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Neon_Time_RecurringTimer_TimeOffset.htm">TimeOffset</a></td><td><div class="summary">
            Returns the <a href="https://docs.microsoft.com/dotnet/api/system.timespan" target="_blank">TimeSpan</a> offet from the beginning of the 
            period when the timer is scheduled to fire.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Neon_Time_RecurringTimer_Type.htm">Type</a></td><td><div class="summary">
            Returns the timer type.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank">Finalize</a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_HasFired.htm">HasFired<span id="LST5B55DCE7_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_3?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Determines whether the timer has fired by comparing the current UTC time with
            the scheduled event time.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_HasFired_1.htm">HasFired(DateTime)</a></td><td><div class="summary">
            Determines if the timer has fired by comparing the current time passed with
            the next scheduled firing time.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_Reset.htm">Reset<span id="LST5B55DCE7_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Resets the timer to fire at the next scheduled interval after the current UTC time.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_Reset_1.htm">Reset(DateTime)</a></td><td><div class="summary">
            Resets the timer to fire at the next scheduled interval after the time passed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_Set.htm">Set</a></td><td><div class="summary">
            Sets the firing time for the timer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_Start.htm">Start<span id="LST5B55DCE7_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_5?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Starts the timer by computing the next firing time after the current time (UTC).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_Start_1.htm">Start(DateTime)</a></td><td><div class="summary">
            Starts the timer by computing the next firing time after the time passed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_ToString.htm">ToString</a></td><td><div class="summary">
            Renders the timer into a string.
            </div> (Overrides <a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank">Object<span id="LST5B55DCE7_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ToString<span id="LST5B55DCE7_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_7?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Neon_Time_RecurringTimer_TryParse.htm">TryParse</a></td><td><div class="summary">
            Attempts to parse <span class="selflink">RecurringTimer</span> from a string.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Time_RecurringTimer_WaitAsync.htm">WaitAsync</a></td><td><div class="summary">
            Waits aynchronously for the timer to fire.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID11RB')" onkeypress="SectionExpandCollapse_CheckKey('ID11RB', event)" tabindex="0"><img id="ID11RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID11RBSection" class="collapsibleSection"><p>
            This timer is designed to be polled periodically from an application's background
            thread by calling the <a href="M_Neon_Time_RecurringTimer_HasFired.htm">HasFired<span id="LST5B55DCE7_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_8?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> or <a href="M_Neon_Time_RecurringTimer_HasFired_1.htm">HasFired(DateTime)</a>
            methods.  These methods will return <span class="code">true</span> if the action associated with the timer
            is to be performed.
            </p><p>
            This class works by watching for the transition between a call to <a href="M_Neon_Time_RecurringTimer_HasFired.htm">HasFired<span id="LST5B55DCE7_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_9?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
            made at a time before the scheduled event and then a subsequent call made when the 
            current time is at or after the scheduled event time. <a href="M_Neon_Time_RecurringTimer_HasFired.htm">HasFired<span id="LST5B55DCE7_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_10?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> will
            return <span class="code">true</span> on the subsequent call if the time is right.
            </p><p>
            This behavior ensures that scheduled tasks will only be executed once for any recurring
            schedule, even if the application is restarted.
            </p><p>
            The <a href="M_Neon_Time_RecurringTimer_HasFired.htm">HasFired<span id="LST5B55DCE7_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_11?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> method uses the current UTC time to perform the
            time comparison.  The <a href="M_Neon_Time_RecurringTimer_HasFired_1.htm">HasFired(DateTime)</a> will use the time passed
            (which may be local time, etc.) to do this.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
            This timer auto resets after <a href="M_Neon_Time_RecurringTimer_HasFired.htm">HasFired<span id="LST5B55DCE7_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_12?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> returns <span class="code">true</span>.  Note also
            that <a href="M_Neon_Time_RecurringTimer_HasFired.htm">HasFired<span id="LST5B55DCE7_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_13?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> must be called fairly frequently (on the order of a few minutes or less)
            to obtain reasonable accuracy.
            </p><p>
            Asynchronous applications may find it more convienent to call <a href="M_Neon_Time_RecurringTimer_WaitAsync.htm">WaitAsync(TimeSpan)</a>
            to wait for the timer to fire.
            </p><p>
            The <a href="M_Neon_Time_RecurringTimer_Reset.htm">Reset<span id="LST5B55DCE7_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5B55DCE7_14?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> and <a href="M_Neon_Time_RecurringTimer_Reset_1.htm">Reset(DateTime)</a> methods may be used to explictly
            reset the timer to fire at the next scheduled time.  This may be useful for ensuring that
            short duration timers are properly reset after an operation that may take longer to
            complete than the timer interval.
            </p></td></tr></table></div><p>
            Recurring timers are represented as strings with the format of the string
            depending on the type of timer.  The table below describes these formats:
            </p><div class="tableSection"><table><tr><td><a href="T_Neon_Time_RecurringTimerType.htm">Disabled</a></td><td><p>
                    Disabled timers never fire.  Simply place the word <b>Disabled</b> at the
                    beginning of the timer string.
                    </p></td></tr><tr><td><a href="T_Neon_Time_RecurringTimerType.htm">Minute</a></td><td><p>
                    Minute timers fire at the top of every minute.  There is no offset.  Minute
                    timers are formatted as:
                    </p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection">
                    Minute
                    </div></td></tr><tr><td><a href="T_Neon_Time_RecurringTimerType.htm">QuarterHour</a></td><td><p>
                    Quarter hour timers are fired four times an hour at the offset from the 15 minute time.  
                    Quarter hour timers formatted as:
                    </p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection">
                    QuarterHour
                    QuarterHour:MM
                    QuarterHour:MM:SS
                    </div></td></tr><tr><td><a href="T_Neon_Time_RecurringTimerType.htm">Hourly</a></td><td><p>
                    Hourly timers are fired once per hour at the offset from the top of the hour.  Hourly timers
                    are formatted as:
                    </p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection">
                    Hourly
                    Hourly:MM
                    Hourly:MM:SS
                    </div></td></tr><tr><td><a href="T_Neon_Time_RecurringTimerType.htm">Daily</a></td><td><p>
                    Daily timers are fired once per day at the specified time of day.  Daily timers
                    are formatted as:
                    </p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Examples</span></div><div id="ID9RBSection" class="collapsibleSection">
                    Daily
                    Daily:HH:MM
                    Daily:HH:MM:SS
                    </div></td></tr><tr><td><a href="T_Neon_Time_RecurringTimerType.htm">Interval</a></td><td><p>
                    Interval timers are fired on a regular interval that is not not
                    tied to a specific period.  Interval timers are formatted as:
                    </p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID10RB')" onkeypress="SectionExpandCollapse_CheckKey('ID10RB', event)" tabindex="0"><img id="ID10RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Examples</span></div><div id="ID10RBSection" class="collapsibleSection">
                    Interval:HH:MM:SS
                    </div></td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID12RB')" onkeypress="SectionExpandCollapse_CheckKey('ID12RB', event)" tabindex="0"><img id="ID12RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Thread Safety</span></div><div id="ID12RBSection" class="collapsibleSection">Instance members of this type are not safe for multi-threaded operations. </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID13RB')" onkeypress="SectionExpandCollapse_CheckKey('ID13RB', event)" tabindex="0"><img id="ID13RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID13RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Neon_Time.htm">Neon.Time Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2016-2019 by neonFORGE, LLC.  All rights reserved.</p> </div></body></html>