<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ILogManager Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ILogManager interface" /><meta name="System.Keywords" content="Neon.Diagnostics.ILogManager interface" /><meta name="Microsoft.Help.F1" content="Neon.Diagnostics.ILogManager" /><meta name="Microsoft.Help.Id" content="T:Neon.Diagnostics.ILogManager" /><meta name="Description" content="Describes an application log manager implementation. is a reasonable implementation for many situations but it's possible for developers to implement custom solutions." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Diagnostics" /><meta name="file" content="T_Neon_Diagnostics_ILogManager" /><meta name="guid" content="T_Neon_Diagnostics_ILogManager" /><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Diagnostics.htm" title="Neon.Diagnostics" tocid="N_Neon_Diagnostics">Neon.Diagnostics</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Diagnostics_ILogManager.htm" title="ILogManager Interface" tocid="T_Neon_Diagnostics_ILogManager">ILogManager Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Neon_Diagnostics_ILogManager.htm" title="ILogManager Properties" tocid="Properties_T_Neon_Diagnostics_ILogManager">ILogManager Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Neon_Diagnostics_ILogManager.htm" title="ILogManager Methods" tocid="Methods_T_Neon_Diagnostics_ILogManager">ILogManager Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>ILogManager Interface</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Describes an application log manager implementation.  <a href="T_Neon_Diagnostics_LogManager.htm">LogManager</a> is a reasonable
            implementation for many situations but it's possible for developers to implement custom solutions.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Neon_Diagnostics.htm">Neon.Diagnostics</a><br />
    <strong>Assembly:</strong>
   Neon.Common (in Neon.Common.dll) Version: 2.13.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">ILogManager</span> : <span class="identifier">ILoggerProvider</span>, 
	<span class="identifier">IDisposable</span></pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">ILogManager</span>
	<span class="keyword">Inherits</span> <span class="identifier">ILoggerProvider</span>, <span class="identifier">IDisposable</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">ILogManager</span> : <span class="identifier">ILoggerProvider</span>, 
	<span class="identifier">IDisposable</span></pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">ILogManager</span> =  
    <span class="keyword">interface</span>
        <span class="keyword">interface</span> <span class="identifier">ILoggerProvider</span>
        <span class="keyword">interface</span> <span class="identifier">IDisposable</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script></div><p>The <span class="selflink">ILogManager</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Properties</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Neon_Diagnostics_ILogManager_EmitIndex.htm">EmitIndex</a></td><td><div class="summary">
            Controls whether the <b>index</b> field is emitted.  This is a counter start
            starts at zero for each application instance and is incremented for each event 
            emitted to help reconstruct exactly what happened when the system time resolution
            isn't fine enough.  This defaults to <span class="code">true</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Neon_Diagnostics_ILogManager_EmitTimestamp.htm">EmitTimestamp</a></td><td><div class="summary">
            Controls whether timestamps are emitted.  This defaults to <span class="code">true</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Neon_Diagnostics_ILogManager_LoggerCreator.htm">LoggerCreator</a></td><td><div class="summary">
            Used to customize what type of <a href="T_Neon_Diagnostics_INeonLogger.htm">INeonLogger</a> will be returned by the 
            various <a href="M_Neon_Diagnostics_ILogManager_GetLogger.htm">GetLogger(String, String, Func<span id="LST4F05EF66_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST4F05EF66_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a> methods.  This defaults
            to creating <a href="T_Neon_Diagnostics_TextLogger.htm">TextLogger</a> instances.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Neon_Diagnostics_ILogManager_LogLevel.htm">LogLevel</a></td><td><div class="summary">
            Specifies the level required for events to be actually recorded.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Neon_Diagnostics_ILogManager_Version.htm">Version</a></td><td><div class="summary">
            The version of the current program or <span class="code">null</span> if not known.
            This should be formatted as a valid <a href="T_Neon_Common_SemanticVersion.htm">SemanticVersion</a> when
            not <span class="code">null</span>.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerprovider.createlogger#Microsoft_Extensions_Logging_ILoggerProvider_CreateLogger_System_String_" target="_blank">CreateLogger</a></td><td><div class="summary">
            Creates a new <a href="https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger" target="_blank">ILogger</a> instance.
            </div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerprovider" target="_blank">ILoggerProvider</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.idisposable.dispose#System_IDisposable_Dispose" target="_blank">Dispose</a></td><td><div class="summary">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.idisposable" target="_blank">IDisposable</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Diagnostics_ILogManager_GetLogger.htm">GetLogger(String, String, Func<span id="LST4F05EF66_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST4F05EF66_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns a named logger.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Diagnostics_ILogManager_GetLogger_1.htm">GetLogger(Type, String, Func<span id="LST4F05EF66_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST4F05EF66_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns a logger to be associated with a specific type.  This method
            supports both <span class="code">static</span> and normal types.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Diagnostics_ILogManager_GetLogger__1.htm">GetLogger<span id="LST4F05EF66_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST4F05EF66_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String, Func<span id="LST4F05EF66_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST4F05EF66_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4F05EF66_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns a logger to be associated with a specific type.  This
            method works only for non-<span class="code">static</span> types.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Diagnostics_ILogManager_GetNextEventIndex.htm">GetNextEventIndex</a></td><td><div class="summary">
            Returns the next event index.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Diagnostics_ILogManager_Reset.htm">Reset</a></td><td><div class="summary">
            Intended to reset the log manager to its default condition.  Implementations may cxustomize
            what this actually does but the default <a href="T_Neon_Diagnostics_LogManager.htm">LogManager</a> implementation resets its
            emitted event counter to zewro, clears and cached loggers, and resets the <a href="P_Neon_Diagnostics_ILogManager_LoggerCreator.htm">LoggerCreator</a>
            delegate.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Neon_Diagnostics_ILogManager_SetLogLevel.htm">SetLogLevel</a></td><td><div class="summary">
            Sets the log level by safely parsing a string.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
            Neon log managers are used to manage one or more <a href="T_Neon_Diagnostics_INeonLogger.htm">INeonLogger</a> instances that handle
            logging for parts of your application, we refer to as <b>modules</b>.  By convention, a module 
            is often the fully qualified name of the .NET type doing the logging but this is just a string
            and can be set to anything.  Log managers are responsible for mapping modules to loggers, potentially
            caching these loggers for performance, and then submitting events to these loggers to be recorded.
            </p><p>
            Log managers also maintain a <span class="code">long</span> count of the events emitted by the application.  This counter 
            is used to record the index of the event in the stream of application events.  This index is typically
            one-based and is useful for knowing the strict order that events were actually recorded.  Event
            timestamps often don't have enough resolution accomplish this.
            </p><p>
            Log managers provide the <a href="P_Neon_Diagnostics_ILogManager_LogLevel.htm">LogLevel</a> property which can be used to control which events
            are actually recorded.  <a href="T_Neon_Diagnostics_LogLevel.htm">LogLevel</a> for information about the relative 
            lof levels.
            </p><p>
            Log managers typically provide a default <a href="T_Neon_Diagnostics_INeonLogger.htm">INeonLogger</a> implementation.  <a href="T_Neon_Diagnostics_LogManager.htm">LogManager</a>
            defaults to logging events to STDERR as text via <a href="T_Neon_Diagnostics_TextLogger.htm">TextLogger</a> which is suitable for
            many server applications, espectially for those deployed as containers where this is standard
            behavior.  <a href="T_Neon_Diagnostics_LogManager.htm">LogManager</a> also implements the <a href="P_Neon_Diagnostics_ILogManager_LoggerCreator.htm">LoggerCreator</a> delegate 
            as an easy way to support custom loggers in your application without having to implement a custom
            <span class="selflink">ILogManager</span> as well.
            </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Neon_Diagnostics.htm">Neon.Diagnostics Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p> </div></body></html>