<html><head><!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-151329628-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-151329628-1');
</script>
<meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="styles/branding.css" /><link rel="stylesheet" type="text/css" href="styles/branding-en-US.css" /><script type="text/javascript" src="scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Neon.Deployment Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Neon.Deployment namespace" /><meta name="Microsoft.Help.F1" content="Neon.Deployment" /><meta name="Microsoft.Help.Id" content="N:Neon.Deployment" /><meta name="Description" content="The Neon.Deployment library includes utility classes for managing deployments for CI/CD. These classes are not entirely general purpose at this point." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Neon.Deployment" /><meta name="file" content="N_Neon_Deployment" /><meta name="guid" content="N_Neon_Deployment" /><link rel="stylesheet" type="text/css" href="styles/branding-Website.css" /><script type="text/javascript" src="scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="scripts/branding-Website.js"></script><script type="text/javascript" src="scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Neon and neonKUBE class libraries and tools<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="index.html" title="Neon and neonKUBE class libraries and tools" tocid="roottoc">Neon and neonKUBE class libraries and tools</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_neon.htm" title="Neon Namespaces" tocid="R_Project_neon">Neon Namespaces</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Neon_Deployment.htm" title="Neon.Deployment" tocid="N_Neon_Deployment">Neon.Deployment</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_AwsCli.htm" title="AwsCli Class" tocid="T_Neon_Deployment_AwsCli">AwsCli Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_DeploymentHelper.htm" title="DeploymentHelper Class" tocid="T_Neon_Deployment_DeploymentHelper">DeploymentHelper Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_IProfileClient.htm" title="IProfileClient Interface" tocid="T_Neon_Deployment_IProfileClient">IProfileClient Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_IProfileRequest.htm" title="IProfileRequest Interface" tocid="T_Neon_Deployment_IProfileRequest">IProfileRequest Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_IProfileResponse.htm" title="IProfileResponse Interface" tocid="T_Neon_Deployment_IProfileResponse">IProfileResponse Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_OnePassword.htm" title="OnePassword Class" tocid="T_Neon_Deployment_OnePassword">OnePassword Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_OnePasswordException.htm" title="OnePasswordException Class" tocid="T_Neon_Deployment_OnePasswordException">OnePasswordException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_ProfileClient.htm" title="ProfileClient Class" tocid="T_Neon_Deployment_ProfileClient">ProfileClient Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_ProfileException.htm" title="ProfileException Class" tocid="T_Neon_Deployment_ProfileException">ProfileException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_ProfileHandlerResult.htm" title="ProfileHandlerResult Class" tocid="T_Neon_Deployment_ProfileHandlerResult">ProfileHandlerResult Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_ProfileRequest.htm" title="ProfileRequest Class" tocid="T_Neon_Deployment_ProfileRequest">ProfileRequest Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_ProfileResponse.htm" title="ProfileResponse Class" tocid="T_Neon_Deployment_ProfileResponse">ProfileResponse Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_ProfileServer.htm" title="ProfileServer Class" tocid="T_Neon_Deployment_ProfileServer">ProfileServer Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Neon_Deployment_ProfileStatus.htm" title="ProfileStatus Class" tocid="T_Neon_Deployment_ProfileStatus">ProfileStatus Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="icons/Help.png" /></td><td class="titleColumn"><h1>Neon.Deployment Namespace</h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p>
            The <b>Neon.Deployment</b> library includes utility classes for managing deployments
            for CI/CD.
            </p><div class="alert"><table><tr><th><img src="icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td>
            These classes are not entirely general purpose at this point.  neonFORGE maintainers are
            currently using this for CI/CD for opensource and private neonFORGE related projects.
            We may make these more generic in the future.
            </td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Classes</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_AwsCli.htm">AwsCli</a></td><td><div class="summary">
            Wraps the AWS-CLI with methods for common operations.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_DeploymentHelper.htm">DeploymentHelper</a></td><td><div class="summary">
            Deployment related defintions and utilities.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_OnePassword.htm">OnePassword</a></td><td><div class="summary">
            Wraps the 1Password CLI.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_OnePasswordException.htm">OnePasswordException</a></td><td><div class="summary">
            Thrown by the <a href="T_Neon_Deployment_OnePassword.htm">OnePassword</a> for errors.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /><img src="icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_Neon_Deployment_ProfileClient.htm">ProfileClient</a></td><td><div class="summary"><p>
            Defines the interface for the client used to communicate with the Neon Profile Service
            or a custom service.  These services provides access to user and workstation specific 
            settings including secrets and general properties.  This is used for activities such as 
            CI/CD automation and integration testing.  This solves the following problems:
            </p><ul><li><p>
            Gaining access to secrets.  neonFORGE has standardized on 1Password for password management
            and the Neon Profile Service abstracts the details of authenticating with 1Password and
            accessing secrets.
            </p><p>
            This interface supports two kinds of secrets: passwords and values.  These are somewhat 
            of an artifact of how we implemented this using 1Password.  Secret passwords are values
            retrieved from a 1Password item's <b>password field</b> and secret values correspond to
            a 1Password item <b>value field.</b>  We found this distinction useful because 1Password
            reports when passwords are insecure or duplicated but we have other secrets where these
            checks can be distracting.  Custom implementation can choose to follow this pattern or
            just treat both types of secret the same.
            </p><p>
            You can also obtain a specific property from a secret password or value by using this syntax:
            </p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Examples</span></div><div id="ID0RBSection" class="collapsibleSection">
            SECRETNAME[PROPERTY]
            </div><p>
            This is useful for obtaining both the username and password from a login, or all of the different
            properties from a credit card, etc.  This blurs the difference between secret passwords and secret
            values a bit but we're going to retain both concepts anyway.
            </p></li><li><p>
            Profile values are also supported.  These are non-secret name/value pairs used for describing
            the local environment as required for CI/CD.  For example, we use this for describing the
            IP addresses available for deploying a test neonKUBE cluster.  Each developer will often
            need distict node IP addresses that work on the local LAN and also don't conflict with
            addresses assigned to other developers.
            </p><p>
            neonFORGE's internal implementation simply persists profile values on the local workstation
            as a YAML file which is referenced by our profile service.
            </p></li><li>
            Abstracting access to the user's master password.  neonFORGE has implemented an internal  
            Windows application that implements a profile service that prompts the developer for their
            master 1Password, optionally caching it for a period of time so the user won't be prompted
            as often.  This server also handles profile and secret lookup.
            </li></ul></div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_ProfileException.htm">ProfileException</a></td><td><div class="summary">
            Thrown by <a href="T_Neon_Deployment_IProfileClient.htm">IProfileClient</a> instance when the profile server
            returned an error.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_ProfileHandlerResult.htm">ProfileHandlerResult</a></td><td><div class="summary">
            Describes the results returned by <a href="T_Neon_Deployment_ProfileServer.htm">ProfileServer</a> handlers.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_ProfileRequest.htm">ProfileRequest</a></td><td><div class="summary">
            Abstracts Neon Profile Service named pipe command requests.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_ProfileResponse.htm">ProfileResponse</a></td><td><div class="summary">
            Abstracts Neon Profile Service named pipe command responses.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_ProfileServer.htm">ProfileServer</a></td><td><div class="summary">
            Implements a named-pipe based server that will be used to receive
            requests from <a href="T_Neon_Deployment_ProfileClient.htm">ProfileClient</a>.  This server listens
            on a named pipe and only allows connections from other processes 
            running on behalf of the current user.
            </div></td></tr><tr data="class; public"><td><img src="icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Neon_Deployment_ProfileStatus.htm">ProfileStatus</a></td><td><div class="summary">
            Enumerates the profile error code strings.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Interfaces</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="interfaceList"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="icons/pubinterface.gif" alt="Public interface" title="Public interface" /><img src="icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_Neon_Deployment_IProfileClient.htm">IProfileClient</a></td><td><div class="summary"><p>
            Defines the interface for the client used to communicate with the Neon Profile Service
            or a custom service.  These services provides access to user and workstation specific 
            settings including secrets and general properties.  This is used for activities such as 
            CI/CD automation and integration testing.  This solves the following problems:
            </p><ul><li><p>
            Gaining access to secrets.  neonFORGE has standardized on 1Password for password management
            and the Neon Profile Service abstracts the details of authenticating with 1Password and
            accessing secrets.
            </p><p>
            This interface supports two kinds of secrets: passwords and values.  These are somewhat 
            of an artifact of how we implemented this using 1Password.  Secret passwords are values
            retrieved from a 1Password item's <b>password field</b> and secret values correspond to
            a 1Password item <b>value field.</b>  We found this distinction useful because 1Password
            reports when passwords are insecure or duplicated but we have other secrets where these
            checks can be distracting.  Custom implementation can choose to follow this pattern or
            just treat both types of secret the same.
            </p><p>
            You can also obtain a specific property from a secret password or value by using this syntax:
            </p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection">
            SECRETNAME[PROPERTY]
            </div><p>
            This is useful for obtaining both the username and password from a login, or all of the different
            properties from a credit card, etc.  This blurs the difference between secret passwords and secret
            values a bit but we're going to retain both concepts anyway.
            </p></li><li><p>
            Profile values are also supported.  These are non-secret name/value pairs used for describing
            the local environment as required for CI/CD.  For example, we use this for describing the
            IP addresses available for deploying a test neonKUBE cluster.  Each developer will often
            need distict node IP addresses that work on the local LAN and also don't conflict with
            addresses assigned to other developers.
            </p><p>
            neonFORGE's internal implementation simply persists profile values on the local workstation
            as a YAML file which is referenced by our profile service.
            </p></li><li>
            Abstracting access to the user's master password.  neonFORGE has implemented an internal  
            Windows application that implements a profile service that prompts the developer for their
            master 1Password, optionally caching it for a period of time so the user won't be prompted
            as often.  This server also handles profile and secret lookup.
            </li></ul></div></td></tr><tr data="interface; public"><td><img src="icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Neon_Deployment_IProfileRequest.htm">IProfileRequest</a></td><td><div class="summary">
            Abstracts Neon Profile Service named pipe command requests.
            </div></td></tr><tr data="interface; public"><td><img src="icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Neon_Deployment_IProfileResponse.htm">IProfileResponse</a></td><td><div class="summary">
            Abstracts Neon Profile Service named pipe command responses.
            </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter">Offline help available for Windows: <a href="neon.chm">neon.chm</a><br />
Report any issues at: <a href="https://github.com/nforgeio/neonKUBE">https://github.com/nforgeio/neonKUBE</a><p>Copyright (c) 2005-2020 by neonFORGE LLC.  All rights reserved.</p> </div></body></html>